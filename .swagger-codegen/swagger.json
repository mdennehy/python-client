{
    "swagger": "2.0",
    "info": {
        "description": "<p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>",
        "version": "v2",
        "title": "Wavefront REST API"
    },
    "basePath": "/",
    "tags": [
        {
            "name": "Cloud Integration"
        },
        {
            "name": "User"
        },
        {
            "name": "External Link"
        },
        {
            "name": "Proxy"
        },
        {
            "name": "Integration"
        },
        {
            "name": "Notificant"
        },
        {
            "name": "Source"
        },
        {
            "name": "Metric"
        },
        {
            "name": "Event"
        },
        {
            "name": "Derived Metric"
        },
        {
            "name": "Query"
        },
        {
            "name": "Settings"
        },
        {
            "name": "Saved Search"
        },
        {
            "name": "Dashboard"
        },
        {
            "name": "Maintenance Window"
        },
        {
            "name": "Direct ingestion"
        },
        {
            "name": "Webhook"
        },
        {
            "name": "UserGroup"
        },
        {
            "name": "Alert"
        },
        {
            "name": "Message"
        },
        {
            "name": "Search"
        }
    ],
    "paths": {
        "/api/v2/alert": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "summary": "Get all alerts for a customer",
                "description": "",
                "operationId": "getAllAlert",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alert"
                ],
                "summary": "Create a specific alert",
                "description": "",
                "operationId": "createAlert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"Alert Name\",\n  \"target\": \"success@simulator.amazonses.com\",\n  \"condition\": \"ts(~sample.cpu.loadavg.1m) > 1\",\n  \"displayExpression\": \"ts(~sample.cpu.loadavg.1m)\",\n  \"minutes\": 5,\n  \"resolveAfterMinutes\": 2,\n  \"severity\": \"INFO\",\n  \"additionalInformation\": \"Additional Info\",\n  \"tags\": {\n    \"customerTags\": [\n      \"alertTag1\"\n    ]\n  }\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Alert"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"Alert Name\",\n  \"target\": \"success@simulator.amazonses.com\",\n  \"condition\": \"ts(~sample.cpu.loadavg.1m) > 1\",\n  \"displayExpression\": \"ts(~sample.cpu.loadavg.1m)\",\n  \"minutes\": 5,\n  \"resolveAfterMinutes\": 2,\n  \"severity\": \"INFO\",\n  \"additionalInformation\": \"Additional Info\",\n  \"tags\": {\n    \"customerTags\": [\n      \"alertTag1\"\n    ]\n  }\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/summary": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "summary": "Count alerts of various statuses for a customer",
                "description": "",
                "operationId": "getAlertsSummary",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerMapStringInteger"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "summary": "Get a specific alert",
                "description": "",
                "operationId": "getAlert",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Alert"
                ],
                "summary": "Update a specific alert",
                "description": "",
                "operationId": "updateAlert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"id\": \"1459375928549\",\n  \"name\": \"Alert Name\",\n  \"target\": \"success@simulator.amazonses.com\",\n  \"condition\": \"ts(~sample.cpu.loadavg.1m) > 1\",\n  \"displayExpression\": \"ts(~sample.cpu.loadavg.1m)\",\n  \"minutes\": 5,\n  \"resolveAfterMinutes\": 2,\n  \"severity\": \"INFO\",\n  \"additionalInformation\": \"Additional Info\",\n  \"tags\": {\n    \"customerTags\": [\n      \"alertTag1\"\n    ]\n  }\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Alert"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"id\": \"1459375928549\",\n  \"name\": \"Alert Name\",\n  \"target\": \"success@simulator.amazonses.com\",\n  \"condition\": \"ts(~sample.cpu.loadavg.1m) > 1\",\n  \"displayExpression\": \"ts(~sample.cpu.loadavg.1m)\",\n  \"minutes\": 5,\n  \"resolveAfterMinutes\": 2,\n  \"severity\": \"INFO\",\n  \"additionalInformation\": \"Additional Info\",\n  \"tags\": {\n    \"customerTags\": [\n      \"alertTag1\"\n    ]\n  }\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alert"
                ],
                "summary": "Delete a specific alert",
                "description": "",
                "operationId": "deleteAlert",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/history": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "summary": "Get the version history of a specific alert",
                "description": "",
                "operationId": "getAlertHistory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerHistoryResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/history/{version}": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "summary": "Get a specific historical version of a specific alert",
                "description": "",
                "operationId": "getAlertVersion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/install": {
            "post": {
                "tags": [
                    "Alert"
                ],
                "summary": "Unhide a specific integration alert",
                "description": "",
                "operationId": "unhideAlert",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/snooze": {
            "post": {
                "tags": [
                    "Alert"
                ],
                "summary": "Snooze a specific alert for some number of seconds",
                "description": "",
                "operationId": "snoozeAlert",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "seconds",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/tag": {
            "get": {
                "tags": [
                    "Alert"
                ],
                "summary": "Get all tags associated with a specific alert",
                "description": "",
                "operationId": "getAlertTags",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerTagsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alert"
                ],
                "summary": "Set all tags associated with a specific alert",
                "description": "",
                "operationId": "setAlertTags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/tag/{tagValue}": {
            "put": {
                "tags": [
                    "Alert"
                ],
                "summary": "Add a tag to a specific alert",
                "description": "",
                "operationId": "addAlertTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Alert"
                ],
                "summary": "Remove a tag from a specific alert",
                "description": "",
                "operationId": "removeAlertTag",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/undelete": {
            "post": {
                "tags": [
                    "Alert"
                ],
                "summary": "Undelete a specific alert",
                "description": "",
                "operationId": "undeleteAlert",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/uninstall": {
            "post": {
                "tags": [
                    "Alert"
                ],
                "summary": "Hide a specific integration alert ",
                "description": "",
                "operationId": "hideAlert",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/alert/{id}/unsnooze": {
            "post": {
                "tags": [
                    "Alert"
                ],
                "summary": "Unsnooze a specific alert",
                "description": "",
                "operationId": "unsnoozeAlert",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/chart/api": {
            "get": {
                "tags": [
                    "Query"
                ],
                "summary": "Perform a charting query against Wavefront servers that returns the appropriate points in the specified time window and granularity",
                "description": "Long time spans and small granularities can take a long time to calculate",
                "operationId": "queryApi",
                "produces": [
                    "application/json",
                    "application/x-javascript; charset=UTF-8",
                    "application/javascript; charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "n",
                        "in": "query",
                        "description": "name used to identify the query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "the query expression to execute",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "s",
                        "in": "query",
                        "description": "the start time of the query window in epoch milliseconds",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "e",
                        "in": "query",
                        "description": "the end time of the query window in epoch milliseconds (null to use now)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "g",
                        "in": "query",
                        "description": "the granularity of the points returned",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "d",
                            "h",
                            "m",
                            "s"
                        ]
                    },
                    {
                        "name": "p",
                        "in": "query",
                        "description": "the approximate maximum number of points to return (may not limit number of points exactly)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "i",
                        "in": "query",
                        "description": "whether series with only points that are outside of the query window will be returned (defaults to true)",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "autoEvents",
                        "in": "query",
                        "description": "whether events for sources included in the query will be automatically returned by the query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "summarization",
                        "in": "query",
                        "description": "summarization strategy to use when bucketing points together",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "MEAN",
                            "MEDIAN",
                            "MIN",
                            "MAX",
                            "SUM",
                            "COUNT",
                            "LAST",
                            "FIRST"
                        ]
                    },
                    {
                        "name": "listMode",
                        "in": "query",
                        "description": "retrieve events more optimally displayed for a list",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "strict",
                        "in": "query",
                        "description": "do not return points outside the query window [s;e), defaults to false",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeObsoleteMetrics",
                        "in": "query",
                        "description": "include metrics that have not been reporting recently, defaults to false",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "description": "sorts the output so that returned series are in order, defaults to false",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "cached",
                        "in": "query",
                        "description": "whether the query cache is used, defaults to true",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/QueryResult"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/chart/metric/detail": {
            "get": {
                "tags": [
                    "Metric"
                ],
                "summary": "Get more details on a metric, including reporting sources and approximate last time reported",
                "description": "",
                "operationId": "getMetricDetails",
                "produces": [
                    "application/json",
                    "application/x-javascript",
                    "application/javascript"
                ],
                "parameters": [
                    {
                        "name": "m",
                        "in": "query",
                        "description": "Metric name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "l",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "c",
                        "in": "query",
                        "description": "cursor value to continue if the number of results exceeds 1000",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "h",
                        "in": "query",
                        "description": "glob pattern for sources to include in the query result",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/MetricDetailsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/chart/raw": {
            "get": {
                "tags": [
                    "Query"
                ],
                "summary": "Perform a raw data query against Wavefront servers that returns second granularity points grouped by tags",
                "description": "An API to check if ingested points are as expected.  Points ingested within a single second are averaged when returned.",
                "operationId": "queryRaw",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "host",
                        "in": "query",
                        "description": "host to query ingested points for (cannot contain wildcards). host or source is equivalent, only one should be used.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "source to query ingested points for (cannot contain wildcards). host or source is equivalent, only one should be used.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "metric",
                        "in": "query",
                        "description": "metric to query ingested points for (cannot contain wildcards)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "start time in epoch milliseconds (cannot be more than a day in the past) null to use an hour before endTime",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "end time in epoch milliseconds (cannot be more than a day in the past) null to use now",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RawTimeseries"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    },
                    "401": {
                        "description": "Authorization Error"
                    },
                    "500": {
                        "description": "Server Error"
                    },
                    "404": {
                        "description": "Metric not found for specified source/host"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/cloudintegration": {
            "get": {
                "tags": [
                    "Cloud Integration"
                ],
                "summary": "Get all cloud integrations for a customer",
                "description": "",
                "operationId": "getAllCloudIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cloud Integration"
                ],
                "summary": "Create a cloud integration",
                "description": "",
                "operationId": "createCloudIntegration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\":\"CloudWatch integration\",\n  \"service\":\"CLOUDWATCH\",\n  \"cloudWatch\":{\n    \"baseCredentials\":{\n      \"roleArn\":\"arn:aws:iam::&lt;accountid&gt;:role/&lt;rolename&gt;\",\n      \"externalId\":\"wave123\"\n    },\n    \"metricFilterRegex\":\"^aws.(sqs|ec2|ebs|elb).*$\",\n    \"pointTagFilterRegex\":\"(region|name)\"\n  },\n  \"serviceRefreshRateInMins\":5\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CloudIntegration"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\":\"CloudWatch integration\",\n  \"service\":\"CLOUDWATCH\",\n  \"cloudWatch\":{\n    \"baseCredentials\":{\n      \"roleArn\":\"arn:aws:iam::&lt;accountid&gt;:role/&lt;rolename&gt;\",\n      \"externalId\":\"wave123\"\n    },\n    \"metricFilterRegex\":\"^aws.(sqs|ec2|ebs|elb).*$\",\n    \"pointTagFilterRegex\":\"(region|name)\"\n  },\n  \"serviceRefreshRateInMins\":5\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/cloudintegration/{id}": {
            "get": {
                "tags": [
                    "Cloud Integration"
                ],
                "summary": "Get a specific cloud integration",
                "description": "",
                "operationId": "getCloudIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cloud Integration"
                ],
                "summary": "Update a specific cloud integration",
                "description": "",
                "operationId": "updateCloudIntegration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\":\"CloudWatch integration\",\n  \"service\":\"CLOUDWATCH\",\n  \"cloudWatch\":{\n    \"baseCredentials\":{\n      \"roleArn\":\"arn:aws:iam::&lt;accountid&gt;:role/&lt;rolename&gt;\",\n      \"externalId\":\"wave123\"\n    },\n    \"metricFilterRegex\":\"^aws.(sqs|ec2|ebs|elb).*$\",\n    \"pointTagFilterRegex\":\"(region|name)\"\n  },\n  \"serviceRefreshRateInMins\":5\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CloudIntegration"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\":\"CloudWatch integration\",\n  \"service\":\"CLOUDWATCH\",\n  \"cloudWatch\":{\n    \"baseCredentials\":{\n      \"roleArn\":\"arn:aws:iam::&lt;accountid&gt;:role/&lt;rolename&gt;\",\n      \"externalId\":\"wave123\"\n    },\n    \"metricFilterRegex\":\"^aws.(sqs|ec2|ebs|elb).*$\",\n    \"pointTagFilterRegex\":\"(region|name)\"\n  },\n  \"serviceRefreshRateInMins\":5\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cloud Integration"
                ],
                "summary": "Delete a specific cloud integration",
                "description": "",
                "operationId": "deleteCloudIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/cloudintegration/{id}/disable": {
            "post": {
                "tags": [
                    "Cloud Integration"
                ],
                "summary": "Disable a specific cloud integration",
                "description": "",
                "operationId": "disableCloudIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/cloudintegration/{id}/enable": {
            "post": {
                "tags": [
                    "Cloud Integration"
                ],
                "summary": "Enable a specific cloud integration",
                "description": "",
                "operationId": "enableCloudIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/cloudintegration/{id}/undelete": {
            "post": {
                "tags": [
                    "Cloud Integration"
                ],
                "summary": "Undelete a specific cloud integration",
                "description": "",
                "operationId": "undeleteCloudIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/customer/permissions": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all permissions",
                "description": "Returns all permissions' info data",
                "operationId": "getAllPermissions",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BusinessActionGroupBasicDTO"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/customer/preferences": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get customer preferences",
                "description": "",
                "operationId": "getCustomerPreferences",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerPreferences"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update selected fields of customer preferences",
                "description": "",
                "operationId": "postCustomerPreferences",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerPreferencesUpdating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerPreferences"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/customer/preferences/defaultUserGroups": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get default user groups customer preferences",
                "description": "",
                "operationId": "getDefaultUserGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerListUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get all dashboards for a customer",
                "description": "",
                "operationId": "getAllDashboard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Create a specific dashboard",
                "description": "",
                "operationId": "createDashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"Dashboard API example\",\n  \"id\": \"api-example\",\n  \"url\": \"api-example\",\n  \"description\": \"Dashboard Description\",\n  \"sections\": [\n    {\n      \"name\": \"Section 1\",\n      \"rows\": [\n        {\n          \"charts\": [\n            {\n              \"name\": \"Chart 1\",\n              \"description\": \"description1\",\n              \"sources\": [\n                {\n                  \"name\": \"Source1\",\n                  \"query\": \"ts()\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"Dashboard API example\",\n  \"id\": \"api-example\",\n  \"url\": \"api-example\",\n  \"description\": \"Dashboard Description\",\n  \"sections\": [\n    {\n      \"name\": \"Section 1\",\n      \"rows\": [\n        {\n          \"charts\": [\n            {\n              \"name\": \"Chart 1\",\n              \"description\": \"description1\",\n              \"sources\": [\n                {\n                  \"name\": \"Source1\",\n                  \"query\": \"ts()\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/acl": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get list of Access Control Lists for the specified dashboards",
                "description": "",
                "operationId": "getAccessControlList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerListACL"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/acl/add": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Adds the specified ids to the given dashboards' ACL",
                "description": "",
                "operationId": "addAccess",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ACL"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/acl/remove": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Removes the specified ids from the given dashboards' ACL",
                "description": "",
                "operationId": "removeAccess",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ACL"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/acl/set": {
            "put": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Set ACL for the specified dashboards",
                "description": "",
                "operationId": "setAcl",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ACL"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/{id}": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get a specific dashboard",
                "description": "",
                "operationId": "getDashboard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Update a specific dashboard",
                "description": "",
                "operationId": "updateDashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"Dashboard API example\",\n  \"id\": \"api-example\",\n  \"url\": \"api-example\",\n  \"description\": \"Dashboard Description\",\n  \"sections\": [\n    {\n      \"name\": \"Section 1\",\n      \"rows\": [\n        {\n          \"charts\": [\n            {\n              \"name\": \"Chart 1\",\n              \"description\": \"description1\",\n              \"sources\": [\n                {\n                  \"name\": \"Source1\",\n                  \"query\": \"ts()\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"Dashboard API example\",\n  \"id\": \"api-example\",\n  \"url\": \"api-example\",\n  \"description\": \"Dashboard Description\",\n  \"sections\": [\n    {\n      \"name\": \"Section 1\",\n      \"rows\": [\n        {\n          \"charts\": [\n            {\n              \"name\": \"Chart 1\",\n              \"description\": \"description1\",\n              \"sources\": [\n                {\n                  \"name\": \"Source1\",\n                  \"query\": \"ts()\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Delete a specific dashboard",
                "description": "",
                "operationId": "deleteDashboard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/{id}/favorite": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Mark a dashboard as favorite",
                "description": "",
                "operationId": "favoriteDashboard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/{id}/history": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get the version history of a specific dashboard",
                "description": "",
                "operationId": "getDashboardHistory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerHistoryResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/{id}/history/{version}": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get a specific version of a specific dashboard",
                "description": "",
                "operationId": "getDashboardVersion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/{id}/tag": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get all tags associated with a specific dashboard",
                "description": "",
                "operationId": "getDashboardTags",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerTagsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Set all tags associated with a specific dashboard",
                "description": "",
                "operationId": "setDashboardTags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/{id}/tag/{tagValue}": {
            "put": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Add a tag to a specific dashboard",
                "description": "",
                "operationId": "addDashboardTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Remove a tag from a specific dashboard",
                "description": "",
                "operationId": "removeDashboardTag",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/{id}/undelete": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Undelete a specific dashboard",
                "description": "",
                "operationId": "undeleteDashboard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/dashboard/{id}/unfavorite": {
            "post": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Unmark a dashboard as favorite",
                "description": "",
                "operationId": "unfavoriteDashboard",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/derivedmetric": {
            "get": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Get all derived metric definitions for a customer",
                "description": "",
                "operationId": "getAllDerivedMetrics",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedDerivedMetricDefinition"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Create a specific derived metric definition",
                "description": "",
                "operationId": "createDerivedMetric",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"Query Name\",\n  \"query\": \"aliasMetric(ts(~sample.cpu.loadavg.1m), \\\"my.new.metric\\\")\",\n  \"minutes\": 5,\n  \"additionalInformation\": \"Additional Info\",\n  \"tags\": {\n    \"customerTags\": [\n      \"derivedMetricTag1\"\n    ]\n  }\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DerivedMetricDefinition"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"Query Name\",\n  \"query\": \"aliasMetric(ts(~sample.cpu.loadavg.1m), \\\"my.new.metric\\\")\",\n  \"minutes\": 5,\n  \"additionalInformation\": \"Additional Info\",\n  \"tags\": {\n    \"customerTags\": [\n      \"derivedMetricTag1\"\n    ]\n  }\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDerivedMetricDefinition"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/derivedmetric/{id}": {
            "get": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Get a specific registered query",
                "description": "",
                "operationId": "getDerivedMetric",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDerivedMetricDefinition"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Update a specific derived metric definition",
                "description": "",
                "operationId": "updateDerivedMetric",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"id\": \"1459375928549\",\n  \"name\": \"Query Name\",\n  \"createUserId\": \"user\",\n  \"query\": \"aliasMetric(ts(~sample.cpu.loadavg.1m), \\\"my.new.metric\\\")\",\n  \"minutes\": 5,\n  \"additionalInformation\": \"Additional Info\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DerivedMetricDefinition"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"id\": \"1459375928549\",\n  \"name\": \"Query Name\",\n  \"createUserId\": \"user\",\n  \"query\": \"aliasMetric(ts(~sample.cpu.loadavg.1m), \\\"my.new.metric\\\")\",\n  \"minutes\": 5,\n  \"additionalInformation\": \"Additional Info\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDerivedMetricDefinition"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Delete a specific derived metric definition",
                "description": "",
                "operationId": "deleteDerivedMetric",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDerivedMetricDefinition"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/derivedmetric/{id}/history": {
            "get": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Get the version history of a specific derived metric definition",
                "description": "",
                "operationId": "getDerivedMetricHistory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerHistoryResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/derivedmetric/{id}/history/{version}": {
            "get": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Get a specific historical version of a specific derived metric definition",
                "description": "",
                "operationId": "getDerivedMetricByVersion",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDerivedMetricDefinition"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/derivedmetric/{id}/tag": {
            "get": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Get all tags associated with a specific derived metric definition",
                "description": "",
                "operationId": "getDerivedMetricTags",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerTagsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Set all tags associated with a specific derived metric definition",
                "description": "",
                "operationId": "setDerivedMetricTags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/derivedmetric/{id}/tag/{tagValue}": {
            "put": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Add a tag to a specific Derived Metric",
                "description": "",
                "operationId": "addTagToDerivedMetric",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Remove a tag from a specific Derived Metric",
                "description": "",
                "operationId": "removeTagFromDerivedMetric",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/derivedmetric/{id}/undelete": {
            "post": {
                "tags": [
                    "Derived Metric"
                ],
                "summary": "Undelete a specific derived metric definition",
                "description": "",
                "operationId": "undeleteDerivedMetric",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerDerivedMetricDefinition"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/event": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "List all the events for a customer within a time range",
                "description": "",
                "operationId": "getAllEventsWithTimeRange",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "earliestStartTimeEpochMillis",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "latestStartTimeEpochMillis",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedEvent"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Create a specific event",
                "description": "The following fields are readonly and will be ignored when passed in the request: <code>id</code>, <code>isEphemeral</code>, <code>isUserEvent</code>, <code>runningState</code>, <code>canDelete</code>, <code>canClose</code>, <code>creatorType</code>, <code>createdAt</code>, <code>updatedAt</code>, <code>createdEpochMillis</code>, <code>updatedEpochMillis</code>, <code>updaterId</code>, <code>creatorId</code>, and <code>summarizedEvents</code>",
                "operationId": "createEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"Event API Example\",\n  \"annotations\": {\n    \"severity\": \"info\",\n    \"type\": \"event type\",\n    \"details\": \"description\"\n  },\n  \"tags\" : [\n    \"eventTag1\"\n  ],\n  \"startTime\": 1490000000000,\n  \"endTime\": 1490000000001\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"Event API Example\",\n  \"annotations\": {\n    \"severity\": \"info\",\n    \"type\": \"event type\",\n    \"details\": \"description\"\n  },\n  \"tags\" : [\n    \"eventTag1\"\n  ],\n  \"startTime\": 1490000000000,\n  \"endTime\": 1490000000001\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerEvent"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/event/{id}": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get a specific event",
                "description": "",
                "operationId": "getEvent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerEvent"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Update a specific event",
                "description": "The following fields are readonly and will be ignored when passed in the request: <code>id</code>, <code>isEphemeral</code>, <code>isUserEvent</code>, <code>runningState</code>, <code>canDelete</code>, <code>canClose</code>, <code>creatorType</code>, <code>createdAt</code>, <code>updatedAt</code>, <code>createdEpochMillis</code>, <code>updatedEpochMillis</code>, <code>updaterId</code>, <code>creatorId</code>, and <code>summarizedEvents</code>",
                "operationId": "updateEvent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"Event API Example\",\n  \"annotations\": {\n    \"severity\": \"info\",\n    \"type\": \"event type\",\n    \"details\": \"description\"\n  },\n  \"tags\" : [\n    \"eventTag1\"\n  ],\n  \"startTime\": 1490000000000,\n  \"endTime\": 1490000000001\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Event"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"Event API Example\",\n  \"annotations\": {\n    \"severity\": \"info\",\n    \"type\": \"event type\",\n    \"details\": \"description\"\n  },\n  \"tags\" : [\n    \"eventTag1\"\n  ],\n  \"startTime\": 1490000000000,\n  \"endTime\": 1490000000001\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerEvent"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Event"
                ],
                "summary": "Delete a specific event",
                "description": "",
                "operationId": "deleteEvent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerEvent"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/event/{id}/close": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Close a specific event",
                "description": "",
                "operationId": "closeEvent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerEvent"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/event/{id}/tag": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get all tags associated with a specific event",
                "description": "",
                "operationId": "getEventTags",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerTagsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Set all tags associated with a specific event",
                "description": "",
                "operationId": "setEventTags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/event/{id}/tag/{tagValue}": {
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Add a tag to a specific event",
                "description": "",
                "operationId": "addEventTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Event"
                ],
                "summary": "Remove a tag from a specific event",
                "description": "",
                "operationId": "removeEventTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/extlink": {
            "get": {
                "tags": [
                    "External Link"
                ],
                "summary": "Get all external links for a customer",
                "description": "",
                "operationId": "getAllExternalLink",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedExternalLink"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "External Link"
                ],
                "summary": "Create a specific external link",
                "description": "",
                "operationId": "createExternalLink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"External Link API Example\",\n  \"template\": \"https://example.com/{{source}}\",\n  \"description\": \"External Link Description\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExternalLink"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"External Link API Example\",\n  \"template\": \"https://example.com/{{source}}\",\n  \"description\": \"External Link Description\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerExternalLink"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/extlink/{id}": {
            "get": {
                "tags": [
                    "External Link"
                ],
                "summary": "Get a specific external link",
                "description": "",
                "operationId": "getExternalLink",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerExternalLink"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "External Link"
                ],
                "summary": "Update a specific external link",
                "description": "",
                "operationId": "updateExternalLink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"External Link API Example\",\n  \"template\": \"https://example.com/{{source}}\",\n  \"description\": \"External Link Description\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExternalLink"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"External Link API Example\",\n  \"template\": \"https://example.com/{{source}}\",\n  \"description\": \"External Link Description\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerExternalLink"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "External Link"
                ],
                "summary": "Delete a specific external link",
                "description": "",
                "operationId": "deleteExternalLink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerExternalLink"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Gets a flat list of all Wavefront integrations available, along with their status",
                "description": "",
                "operationId": "getAllIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/installed": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Gets a flat list of all Integrations that are installed, along with their status",
                "description": "",
                "operationId": "getInstalledIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerListIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/manifests": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Gets all Wavefront integrations as structured in their integration manifests, along with their status and content",
                "description": "",
                "operationId": "getAllIntegrationInManifests",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerListIntegrationManifestGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/manifests/min": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Gets all Wavefront integrations as structured in their integration manifests.",
                "description": "",
                "operationId": "getAllIntegrationInManifestsMin",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerListIntegrationManifestGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/status": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Gets the status of all Wavefront integrations",
                "description": "",
                "operationId": "getAllIntegrationStatuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerMapStringIntegrationStatus"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/{id}": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Gets a single Wavefront integration by its id, along with its status",
                "description": "",
                "operationId": "getIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "refresh",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/{id}/install": {
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Installs a Wavefront integration",
                "description": "",
                "operationId": "installIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerIntegrationStatus"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/{id}/install-all-alerts": {
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Enable all alerts associated with this integration",
                "description": "",
                "operationId": "installAllIntegrationAlerts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InstallAlerts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerIntegrationStatus"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/{id}/status": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Gets the status of a single Wavefront integration",
                "description": "",
                "operationId": "getIntegrationStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerIntegrationStatus"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/{id}/uninstall": {
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Uninstalls a Wavefront integration",
                "description": "",
                "operationId": "uninstallIntegration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerIntegrationStatus"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/integration/{id}/uninstall-all-alerts": {
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Disable all alerts associated with this integration",
                "description": "",
                "operationId": "uninstallAllIntegrationAlerts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerIntegrationStatus"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/maintenancewindow": {
            "get": {
                "tags": [
                    "Maintenance Window"
                ],
                "summary": "Get all maintenance windows for a customer",
                "description": "",
                "operationId": "getAllMaintenanceWindow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedMaintenanceWindow"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Maintenance Window"
                ],
                "summary": "Create a maintenance window",
                "description": "",
                "operationId": "createMaintenanceWindow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"reason\": \"MW Reason\",\n  \"title\": \"MW Title\",\n  \"startTimeInSeconds\": 1483228800,\n  \"endTimeInSeconds\": 1483232400,\n  \"relevantCustomerTags\": [\n    \"alertId1\"\n  ],\n  \"relevantHostTags\": [\n    \"sourceTag1\"\n  ]\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MaintenanceWindow"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"reason\": \"MW Reason\",\n  \"title\": \"MW Title\",\n  \"startTimeInSeconds\": 1483228800,\n  \"endTimeInSeconds\": 1483232400,\n  \"relevantCustomerTags\": [\n    \"alertId1\"\n  ],\n  \"relevantHostTags\": [\n    \"sourceTag1\"\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerMaintenanceWindow"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/maintenancewindow/{id}": {
            "get": {
                "tags": [
                    "Maintenance Window"
                ],
                "summary": "Get a specific maintenance window",
                "description": "",
                "operationId": "getMaintenanceWindow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerMaintenanceWindow"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Maintenance Window"
                ],
                "summary": "Update a specific maintenance window",
                "description": "",
                "operationId": "updateMaintenanceWindow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"reason\": \"MW Reason\",\n  \"title\": \"MW Title\",\n  \"startTimeInSeconds\": 1483228800,\n  \"endTimeInSeconds\": 1483232400,\n  \"relevantCustomerTags\": [\n    \"alertId1\"\n  ],\n  \"relevantHostTags\": [\n    \"sourceTag1\"\n  ]\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MaintenanceWindow"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"reason\": \"MW Reason\",\n  \"title\": \"MW Title\",\n  \"startTimeInSeconds\": 1483228800,\n  \"endTimeInSeconds\": 1483232400,\n  \"relevantCustomerTags\": [\n    \"alertId1\"\n  ],\n  \"relevantHostTags\": [\n    \"sourceTag1\"\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerMaintenanceWindow"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Maintenance Window"
                ],
                "summary": "Delete a specific maintenance window",
                "description": "",
                "operationId": "deleteMaintenanceWindow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerMaintenanceWindow"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/message": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Gets messages applicable to the current user, i.e. within time range and distribution scope",
                "description": "",
                "operationId": "userGetMessages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "unreadOnly",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedMessage"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/message/{id}/read": {
            "post": {
                "tags": [
                    "Message"
                ],
                "summary": "Mark a specific message as read",
                "description": "",
                "operationId": "userReadMessage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerMessage"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/notificant": {
            "get": {
                "tags": [
                    "Notificant"
                ],
                "summary": "Get all notification targets for a customer",
                "description": "",
                "operationId": "getAllNotificants",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notificant"
                ],
                "summary": "Create a notification target",
                "description": "",
                "operationId": "createNotificant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"description\": \"Notificant Description\",\n  \"template\": \"POST Body -- Mustache syntax\",\n  \"title\": \"Email title\",\n  \"triggers\": [\n    \"ALERT_OPENED\"\n  ],\n  \"method\": \"EMAIL\",\n  \"recipient\": \"value@example.com\",\n  \"emailSubject\": \"Email subject cannot contain new line\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Notificant"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"description\": \"Notificant Description\",\n  \"template\": \"POST Body -- Mustache syntax\",\n  \"title\": \"Email title\",\n  \"triggers\": [\n    \"ALERT_OPENED\"\n  ],\n  \"method\": \"EMAIL\",\n  \"recipient\": \"value@example.com\",\n  \"emailSubject\": \"Email subject cannot contain new line\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/notificant/test/{id}": {
            "post": {
                "tags": [
                    "Notificant"
                ],
                "summary": "Test a specific notification target",
                "description": "",
                "operationId": "testNotificant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/notificant/{id}": {
            "get": {
                "tags": [
                    "Notificant"
                ],
                "summary": "Get a specific notification target",
                "description": "",
                "operationId": "getNotificant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Notificant"
                ],
                "summary": "Update a specific notification target",
                "description": "",
                "operationId": "updateNotificant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"description\": \"Notificant Description\",\n  \"template\": \"POST Body -- Mustache syntax\",\n  \"title\": \"Email title\",\n  \"triggers\": [\n    \"ALERT_OPENED\"\n  ],\n  \"method\": \"EMAIL\",\n  \"recipient\": \"value@example.com\",\n  \"emailSubject\": \"Email subject cannot contain new line\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Notificant"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"description\": \"Notificant Description\",\n  \"template\": \"POST Body -- Mustache syntax\",\n  \"title\": \"Email title\",\n  \"triggers\": [\n    \"ALERT_OPENED\"\n  ],\n  \"method\": \"EMAIL\",\n  \"recipient\": \"value@example.com\",\n  \"emailSubject\": \"Email subject cannot contain new line\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notificant"
                ],
                "summary": "Delete a specific notification target",
                "description": "",
                "operationId": "deleteNotificant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/proxy": {
            "get": {
                "tags": [
                    "Proxy"
                ],
                "summary": "Get all proxies for a customer",
                "description": "",
                "operationId": "getAllProxy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedProxy"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/proxy/{id}": {
            "get": {
                "tags": [
                    "Proxy"
                ],
                "summary": "Get a specific proxy",
                "description": "",
                "operationId": "getProxy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerProxy"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Proxy"
                ],
                "summary": "Update the name of a specific proxy",
                "description": "",
                "operationId": "updateProxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"New Name for proxy\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Proxy"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"New Name for proxy\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerProxy"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Proxy"
                ],
                "summary": "Delete a specific proxy",
                "description": "",
                "operationId": "deleteProxy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerProxy"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/proxy/{id}/undelete": {
            "post": {
                "tags": [
                    "Proxy"
                ],
                "summary": "Undelete a specific proxy",
                "description": "",
                "operationId": "undeleteProxy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerProxy"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/savedsearch": {
            "get": {
                "tags": [
                    "Saved Search"
                ],
                "summary": "Get all saved searches for a user",
                "description": "",
                "operationId": "getAllSavedSearches",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedSavedSearch"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Saved Search"
                ],
                "summary": "Create a saved search",
                "description": "",
                "operationId": "createSavedSearch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"query\": {\n    \"foo\": \"{\\\"searchTerms\\\":[{\\\"type\\\":\\\"freetext\\\",\\\"value\\\":\\\"foo\\\"}]}\"\n  },\n  \"entityType\": \"DASHBOARD\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SavedSearch"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"query\": {\n    \"foo\": \"{\\\"searchTerms\\\":[{\\\"type\\\":\\\"freetext\\\",\\\"value\\\":\\\"foo\\\"}]}\"\n  },\n  \"entityType\": \"DASHBOARD\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerSavedSearch"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/savedsearch/type/{entitytype}": {
            "get": {
                "tags": [
                    "Saved Search"
                ],
                "summary": "Get all saved searches for a specific entity type for a user",
                "description": "",
                "operationId": "getAllEntityTypeSavedSearches",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "entitytype",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "DASHBOARD",
                            "ALERT",
                            "MAINTENANCE_WINDOW",
                            "NOTIFICANT",
                            "EVENT",
                            "SOURCE",
                            "EXTERNAL_LINK",
                            "AGENT",
                            "CLOUD_INTEGRATION",
                            "USER",
                            "USER_GROUP"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedSavedSearch"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/savedsearch/{id}": {
            "get": {
                "tags": [
                    "Saved Search"
                ],
                "summary": "Get a specific saved search",
                "description": "",
                "operationId": "getSavedSearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerSavedSearch"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Saved Search"
                ],
                "summary": "Update a specific saved search",
                "description": "",
                "operationId": "updateSavedSearch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"query\": {\n    \"foo\": \"{\\\"searchTerms\\\":[{\\\"type\\\":\\\"freetext\\\",\\\"value\\\":\\\"foo\\\"}]}\"\n  },\n  \"entityType\": \"DASHBOARD\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SavedSearch"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"query\": {\n    \"foo\": \"{\\\"searchTerms\\\":[{\\\"type\\\":\\\"freetext\\\",\\\"value\\\":\\\"foo\\\"}]}\"\n  },\n  \"entityType\": \"DASHBOARD\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerSavedSearch"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Saved Search"
                ],
                "summary": "Delete a specific saved search",
                "description": "",
                "operationId": "deleteSavedSearch",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerSavedSearch"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/alert": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's non-deleted alerts",
                "description": "",
                "operationId": "searchAlertEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedAlertWithStats"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/alert/deleted": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's deleted alerts",
                "description": "",
                "operationId": "searchAlertDeletedEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedAlert"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/alert/deleted/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's deleted alerts",
                "description": "",
                "operationId": "searchAlertDeletedForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/alert/deleted/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's deleted alerts",
                "description": "",
                "operationId": "searchAlertDeletedForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/alert/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's non-deleted alerts",
                "description": "",
                "operationId": "searchAlertForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/alert/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's non-deleted alerts",
                "description": "",
                "operationId": "searchAlertForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/cloudintegration": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's non-deleted cloud integrations",
                "description": "",
                "operationId": "searchCloudIntegrationEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/cloudintegration/deleted": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's deleted cloud integrations",
                "description": "",
                "operationId": "searchCloudIntegrationDeletedEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedCloudIntegration"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/cloudintegration/deleted/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's deleted cloud integrations",
                "description": "",
                "operationId": "searchCloudIntegrationDeletedForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/cloudintegration/deleted/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's deleted cloud integrations",
                "description": "",
                "operationId": "searchCloudIntegrationDeletedForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/cloudintegration/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's non-deleted cloud integrations",
                "description": "",
                "operationId": "searchCloudIntegrationForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/cloudintegration/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's non-deleted cloud integrations",
                "description": "",
                "operationId": "searchCloudIntegrationForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/dashboard": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's non-deleted dashboards",
                "description": "",
                "operationId": "searchDashboardEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/dashboard/deleted": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's deleted dashboards",
                "description": "",
                "operationId": "searchDashboardDeletedEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedDashboard"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/dashboard/deleted/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's deleted dashboards",
                "description": "",
                "operationId": "searchDashboardDeletedForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/dashboard/deleted/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's deleted dashboards",
                "description": "",
                "operationId": "searchDashboardDeletedForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/dashboard/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's non-deleted dashboards",
                "description": "",
                "operationId": "searchDashboardForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/dashboard/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's non-deleted dashboards",
                "description": "",
                "operationId": "searchDashboardForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/derivedmetric": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's non-deleted derived metric definitions",
                "description": "",
                "operationId": "searchRegisteredQueryEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedDerivedMetricDefinitionWithStats"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/derivedmetric/deleted": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's deleted derived metric definitions",
                "description": "",
                "operationId": "searchRegisteredQueryDeletedEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedDerivedMetricDefinition"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/derivedmetric/deleted/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's deleted derived metric definitions",
                "description": "",
                "operationId": "searchRegisteredQueryDeletedForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/derivedmetric/deleted/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's deleted derived metric definitions",
                "description": "",
                "operationId": "searchRegisteredQueryDeletedForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/derivedmetric/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's non-deleted derived metric definition",
                "description": "",
                "operationId": "searchRegisteredQueryForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/derivedmetric/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's non-deleted derived metric definitions",
                "description": "",
                "operationId": "searchRegisteredQueryForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/event": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's events",
                "description": "",
                "operationId": "searchReportEventEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EventSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedEvent"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/event/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's events",
                "description": "",
                "operationId": "searchReportEventForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/event/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's events",
                "description": "",
                "operationId": "searchReportEventForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/extlink": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's external links",
                "description": "",
                "operationId": "searchExternalLinkEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedExternalLink"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/extlink/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's external links",
                "description": "",
                "operationId": "searchExternalLinksForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/extlink/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's external links",
                "description": "",
                "operationId": "searchExternalLinksForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/maintenancewindow": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's maintenance windows",
                "description": "",
                "operationId": "searchMaintenanceWindowEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedMaintenanceWindow"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/maintenancewindow/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's maintenance windows",
                "description": "",
                "operationId": "searchMaintenanceWindowForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/maintenancewindow/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's maintenance windows",
                "description": "",
                "operationId": "searchMaintenanceWindowForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/notificant": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's notificants",
                "description": "",
                "operationId": "searchNotificantEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/notificant/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's notificants",
                "description": "",
                "operationId": "searchNotficantForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/notificant/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's notificants",
                "description": "",
                "operationId": "searchNotificantForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/proxy": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's non-deleted proxies",
                "description": "",
                "operationId": "searchProxyEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedProxy"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/proxy/deleted": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's deleted proxies",
                "description": "",
                "operationId": "searchProxyDeletedEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedProxy"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/proxy/deleted/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's deleted proxies",
                "description": "",
                "operationId": "searchProxyDeletedForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/proxy/deleted/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's deleted proxies",
                "description": "",
                "operationId": "searchProxyDeletedForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/proxy/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's non-deleted proxies",
                "description": "",
                "operationId": "searchProxyForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/proxy/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's non-deleted proxies",
                "description": "",
                "operationId": "searchProxyForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/source": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's sources",
                "description": "",
                "operationId": "searchTaggedSourceEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SourceSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedSource"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/source/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's sources",
                "description": "",
                "operationId": "searchTaggedSourceForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/source/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's sources",
                "description": "",
                "operationId": "searchTaggedSourceForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/user": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's users",
                "description": "",
                "operationId": "searchUserEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedCustomerFacingUserObject"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/user/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's users",
                "description": "",
                "operationId": "searchUserForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/user/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's users",
                "description": "",
                "operationId": "searchUserForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/usergroup": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's user groups",
                "description": "",
                "operationId": "searchUserGroupEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/usergroup/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's user groups",
                "description": "",
                "operationId": "searchUserGroupForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/usergroup/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's user groups",
                "description": "",
                "operationId": "searchUserGroupForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/webhook": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search over a customer's webhooks",
                "description": "",
                "operationId": "searchWebHookEntities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SortableSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/webhook/facets": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of one or more facets over the customer's webhooks",
                "description": "",
                "operationId": "searchWebhookForFacets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetsSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetsResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/search/webhook/{facet}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Lists the values of a specific facet over the customer's webhooks",
                "description": "",
                "operationId": "searchWebHookForFacet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "facet",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FacetSearchRequestContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerFacetResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/source": {
            "get": {
                "tags": [
                    "Source"
                ],
                "summary": "Get all sources for a customer",
                "description": "",
                "operationId": "getAllSource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedSource"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Source"
                ],
                "summary": "Create metadata (description or tags) for a specific source",
                "description": "",
                "operationId": "createSource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n    \"sourceName\": \"source.name\",\n    \"tags\": {\"sourceTag1\": true},\n    \"description\": \"Source Description\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Source"
                        },
                        "x-examples": {
                            "application/json": "{\n    \"sourceName\": \"source.name\",\n    \"tags\": {\"sourceTag1\": true},\n    \"description\": \"Source Description\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerSource"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/source/{id}": {
            "get": {
                "tags": [
                    "Source"
                ],
                "summary": "Get a specific source for a customer",
                "description": "",
                "operationId": "getSource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerSource"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Source"
                ],
                "summary": "Update metadata (description or tags) for a specific source.",
                "description": "The \"hidden\" property is stored as a tag. To set the value, add \"hidden\": &lt;value&gt; to the list of tags.",
                "operationId": "updateSource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n    \"sourceName\": \"source.name\",\n    \"tags\": {\"sourceTag1\": true},\n    \"description\": \"Source Description\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Source"
                        },
                        "x-examples": {
                            "application/json": "{\n    \"sourceName\": \"source.name\",\n    \"tags\": {\"sourceTag1\": true},\n    \"description\": \"Source Description\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerSource"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Source"
                ],
                "summary": "Delete metadata (description and tags) for a specific source",
                "description": "",
                "operationId": "deleteSource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerSource"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/source/{id}/description": {
            "post": {
                "tags": [
                    "Source"
                ],
                "summary": "Set description associated with a specific source",
                "description": "",
                "operationId": "setDescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Source"
                ],
                "summary": "Remove description from a specific source",
                "description": "",
                "operationId": "removeDescription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/source/{id}/tag": {
            "get": {
                "tags": [
                    "Source"
                ],
                "summary": "Get all tags associated with a specific source",
                "description": "",
                "operationId": "getSourceTags",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerTagsResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Source"
                ],
                "summary": "Set all tags associated with a specific source",
                "description": "",
                "operationId": "setSourceTags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/source/{id}/tag/{tagValue}": {
            "put": {
                "tags": [
                    "Source"
                ],
                "summary": "Add a tag to a specific source",
                "description": "",
                "operationId": "addSourceTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Source"
                ],
                "summary": "Remove a tag from a specific source",
                "description": "",
                "operationId": "removeSourceTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tagValue",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainer"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "Returns all users",
                "operationId": "getAllUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserModel"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Creates or updates a user",
                "description": "",
                "operationId": "createOrUpdateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sendEmail",
                        "in": "query",
                        "description": "Whether to send email notification to the user, if created.  Default: false",
                        "required": false,
                        "type": "boolean",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"emailAddress\": \"user@example.com\",\n  \"groups\": [\n    \"user_management\"\n  ],\n  \"userGroups\": [\n    \"8b23136b-ecd2-4cb5-8c92-62477dcc4090\"\n  ]\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserToCreate"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"emailAddress\": \"user@example.com\",\n  \"groups\": [\n    \"user_management\"\n  ],\n  \"userGroups\": [\n    \"8b23136b-ecd2-4cb5-8c92-62477dcc4090\"\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/deleteUsers": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Deletes multiple users",
                "description": "",
                "operationId": "deleteMultipleUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "identifiers of list of users which should be deleted",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerListString"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/grant/{permission}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Grants a specific user permission to multiple users",
                "description": "",
                "operationId": "grantPermissionToUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission to grant to the users. Please note that 'host_tag_management' is the equivalent of the 'Source Tag Management' permission",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "agent_management",
                            "alerts_management",
                            "dashboard_management",
                            "embedded_charts",
                            "events_management",
                            "external_links_management",
                            "host_tag_management",
                            "metrics_management",
                            "user_management"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "list of users which should be revoked by specified permission",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/invite": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Invite users with given user groups and permissions.",
                "description": "",
                "operationId": "inviteUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>[\n{\n  \"emailAddress\": \"user@example.com\",\n  \"groups\": [\n    \"user_management\"\n  ],\n  \"userGroups\": [\n    \"8b23136b-ecd2-4cb5-8c92-62477dcc4090\"\n  ]\n}\n]</pre>",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserToCreate"
                            }
                        },
                        "x-examples": {
                            "application/json": "{\n  \"emailAddress\": \"user@example.com\",\n  \"groups\": [\n    \"user_management\"\n  ],\n  \"userGroups\": [\n    \"8b23136b-ecd2-4cb5-8c92-62477dcc4090\"\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/revoke/{permission}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Revokes a specific user permission from multiple users",
                "description": "",
                "operationId": "revokePermissionFromUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission to grant to the users. Please note that 'host_tag_management' is the equivalent of the 'Source Tag Management' permission",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "agent_management",
                            "alerts_management",
                            "dashboard_management",
                            "embedded_charts",
                            "events_management",
                            "external_links_management",
                            "host_tag_management",
                            "metrics_management",
                            "user_management"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "list of users which should be revoked by specified permission",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Retrieves a user by identifier (email addr)",
                "description": "",
                "operationId": "getUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user with given user groups and permissions.",
                "description": "",
                "operationId": "updateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"identifier\": \"user@example.com\",\n  \"groups\": [\n    \"user_management\"\n  ],\n  \"userGroups\": [\n    \"8b23136b-ecd2-4cb5-8c92-62477dcc4090\"\n  ]\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserRequestDTO"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"identifier\": \"user@example.com\",\n  \"groups\": [\n    \"user_management\"\n  ],\n  \"userGroups\": [\n    \"8b23136b-ecd2-4cb5-8c92-62477dcc4090\"\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Deletes a user identified by id",
                "description": "",
                "operationId": "deleteUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/{id}/addUserGroups": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Adds specific user groups to the user",
                "description": "",
                "operationId": "addUserToUserGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The list of user groups that should be added to the user",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/{id}/grant": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Grants a specific user permission",
                "description": "",
                "operationId": "grantUserPermission",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "formData",
                        "description": "Permission group to grant to this user.  Please note that 'host_tag_management' is the equivalent of the 'Source Tag Management' permission",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "agent_management",
                            "alerts_management",
                            "dashboard_management",
                            "embedded_charts",
                            "events_management",
                            "external_links_management",
                            "host_tag_management",
                            "metrics_management",
                            "user_management"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/{id}/removeUserGroups": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Removes specific user groups from the user",
                "description": "",
                "operationId": "removeUserFromUserGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The list of user groups that should be removed from the user",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/user/{id}/revoke": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Revokes a specific user permission",
                "description": "",
                "operationId": "revokeUserPermission",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/usergroup": {
            "get": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Get all user groups for a customer",
                "description": "",
                "operationId": "getAllUserGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Create a specific user group",
                "description": "",
                "operationId": "createUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"name\": \"UserGroup name\",\n  \"permissions\": [\n  \"permission1\",\n  \"permission2\",\n  \"permission3\"\n  ]\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserGroupWrite"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"name\": \"UserGroup name\",\n  \"permissions\": [\n  \"permission1\",\n  \"permission2\",\n  \"permission3\"\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/usergroup/grant/{permission}": {
            "post": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Grants a single permission to user group(s)",
                "description": "",
                "operationId": "grantPermissionToUserGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission to grant to user group(s).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of user groups.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/usergroup/revoke/{permission}": {
            "post": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Revokes a single permission from user group(s)",
                "description": "",
                "operationId": "revokePermissionFromUserGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Permission to revoke from user group(s).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of user groups.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/usergroup/{id}": {
            "get": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Get a specific user group",
                "description": "",
                "operationId": "getUserGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Update a specific user group",
                "description": "",
                "operationId": "updateUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"id\": \"UserGroup identifier\",\n  \"name\": \"UserGroup name\",\n  \"permissions\": [\n  \"permission1\",\n  \"permission2\",\n  \"permission3\"\n  ]\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserGroupWrite"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"id\": \"UserGroup identifier\",\n  \"name\": \"UserGroup name\",\n  \"permissions\": [\n  \"permission1\",\n  \"permission2\",\n  \"permission3\"\n  ]\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Delete a specific user group",
                "description": "",
                "operationId": "deleteUserGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/usergroup/{id}/addUsers": {
            "post": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Add multiple users to a specific user group",
                "description": "",
                "operationId": "addUsersToUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of users that should be added to user group",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/usergroup/{id}/removeUsers": {
            "post": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "Remove multiple users from a specific user group",
                "description": "",
                "operationId": "removeUsersFromUserGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of users that should be removed from user group",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerUserGroup"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/webhook": {
            "get": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Get all webhooks for a customer",
                "description": "",
                "operationId": "getAllWebhooks",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerPagedNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Create a specific webhook",
                "description": "",
                "operationId": "createWebhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"description\": \"WebHook Description\",\n  \"template\": \"POST Body -- Mustache syntax\",\n  \"title\": \"WebHook Title\",\n  \"triggers\": [\n    \"ALERT_OPENED\"\n  ],\n  \"recipient\": \"http://example.com\",\n  \"customHttpHeaders\": {},\n  \"contentType\": \"text/plain\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Notificant"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"description\": \"WebHook Description\",\n  \"template\": \"POST Body -- Mustache syntax\",\n  \"title\": \"WebHook Title\",\n  \"triggers\": [\n    \"ALERT_OPENED\"\n  ],\n  \"recipient\": \"http://example.com\",\n  \"customHttpHeaders\": {},\n  \"contentType\": \"text/plain\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/v2/webhook/{id}": {
            "get": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Get a specific webhook",
                "description": "",
                "operationId": "getWebhook",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Update a specific webhook",
                "description": "",
                "operationId": "updateWebhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Example Body: \n<pre>{\n  \"description\": \"WebHook Description\",\n  \"template\": \"POST Body -- Mustache syntax\",\n  \"title\": \"WebHook Title\",\n  \"triggers\": [\n    \"ALERT_OPENED\"\n  ],\n  \"recipient\": \"http://example.com\",\n  \"customHttpHeaders\": {},\n  \"contentType\": \"text/plain\"\n}</pre>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Notificant"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"description\": \"WebHook Description\",\n  \"template\": \"POST Body -- Mustache syntax\",\n  \"title\": \"WebHook Title\",\n  \"triggers\": [\n    \"ALERT_OPENED\"\n  ],\n  \"recipient\": \"http://example.com\",\n  \"customHttpHeaders\": {},\n  \"contentType\": \"text/plain\"\n}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Webhook"
                ],
                "summary": "Delete a specific webhook",
                "description": "",
                "operationId": "deleteWebhook",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseContainerNotificant"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/report": {
            "post": {
                "tags": [
                    "Direct ingestion"
                ],
                "summary": "Directly ingest data/data stream with specified format",
                "description": "",
                "operationId": "report",
                "consumes": [
                    "application/octet-stream",
                    "application/x-www-form-urlencoded",
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "f",
                        "in": "query",
                        "description": "Format of data to be ingested",
                        "required": false,
                        "type": "string",
                        "default": "wavefront",
                        "enum": [
                            "wavefront",
                            "histogram",
                            "trace"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Data to be ingested, in the specified format.  See https://docs.wavefront.com/direct_ingestion.html for more detail on how to format the data. Example in \"wavefront\" format: \n<pre>test.metric 100 source=test.source</pre>\nwhich ingests a time series point with metric name \"test.metric\", source name \"test.source\", and value of 100 with timestamp of now.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "X-AUTH-TOKEN",
            "in": "header"
        }
    },
    "definitions": {
        "ResponseContainerPagedExternalLink": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedExternalLink"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ChartSourceQuery": {
            "type": "object",
            "required": [
                "name",
                "query"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the source"
                },
                "query": {
                    "type": "string",
                    "description": "Query expression to plot on the chart"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the source is disabled"
                },
                "secondaryAxis": {
                    "type": "boolean",
                    "description": "Determines if this source relates to the right hand Y-axis or not"
                },
                "scatterPlotSource": {
                    "type": "string",
                    "description": "For scatter plots, does this query source the X-axis or the Y-axis",
                    "enum": [
                        "X",
                        "Y"
                    ]
                },
                "querybuilderSerialization": {
                    "type": "string",
                    "description": "Opaque representation of the querybuilder"
                },
                "querybuilderEnabled": {
                    "type": "boolean",
                    "description": "Whether or not this source line should have the query builder enabled"
                },
                "sourceDescription": {
                    "type": "string",
                    "description": "A description for the purpose of this source"
                },
                "sourceColor": {
                    "type": "string",
                    "description": "The color used to draw all results from this source (auto if unset)"
                }
            }
        },
        "DashboardSection": {
            "type": "object",
            "required": [
                "name",
                "rows"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of this section"
                },
                "rows": {
                    "type": "array",
                    "description": "Rows of this section",
                    "items": {
                        "$ref": "#/definitions/DashboardSectionRow"
                    }
                }
            }
        },
        "HistoryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/HistoryEntry"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "JsonNode": {
            "type": "object"
        },
        "PagedCloudIntegration": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/CloudIntegration"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "ResponseContainerPagedMessage": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedMessage"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "UserGroup": {
            "type": "object",
            "required": [
                "name",
                "permissions"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "description": "List(may be incomplete) of users that are members of the user group.",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "userCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of users that are members of the user group",
                    "readOnly": true
                },
                "properties": {
                    "description": "The properties of the user group(name editable, users editable, etc.)",
                    "readOnly": true,
                    "$ref": "#/definitions/UserGroupPropertiesDTO"
                },
                "permissions": {
                    "type": "array",
                    "description": "List of permissions the user group has been granted access to",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user group"
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the user group"
                },
                "customer": {
                    "type": "string",
                    "description": "The id of the customer to which the user group belongs",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                }
            },
            "description": "Wavefront user group entity"
        },
        "CustomerPreferences": {
            "type": "object",
            "required": [
                "customerId",
                "grantModifyAccessToEveryone",
                "hideTSWhenQuerybuilderShown",
                "showOnboarding",
                "showQuerybuilderByDefault"
            ],
            "properties": {
                "defaultUserGroups": {
                    "type": "array",
                    "description": "List of default user groups of the customer",
                    "items": {
                        "$ref": "#/definitions/UserGroup"
                    }
                },
                "id": {
                    "type": "string"
                },
                "customerId": {
                    "type": "string",
                    "description": "The id of the customer preferences are attached to"
                },
                "creatorId": {
                    "type": "string"
                },
                "updaterId": {
                    "type": "string"
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64"
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64"
                },
                "invitePermissions": {
                    "type": "array",
                    "description": "List of permissions that are assigned to newly invited users",
                    "items": {
                        "type": "string"
                    }
                },
                "showQuerybuilderByDefault": {
                    "type": "boolean",
                    "description": "Whether the Querybuilder is shown by default"
                },
                "hideTSWhenQuerybuilderShown": {
                    "type": "boolean",
                    "description": "Whether to hide TS source input when Querybuilder is shown"
                },
                "blacklistedEmails": {
                    "type": "object",
                    "description": "List of blacklisted emails of the customer",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "hiddenMetricPrefixes": {
                    "type": "object",
                    "description": "Metric prefixes which should be hidden from user",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "landingDashboardSlug": {
                    "type": "string",
                    "description": "Dashboard where user will be redirected from landing page"
                },
                "showOnboarding": {
                    "type": "boolean",
                    "description": "Whether to show onboarding for any new user without an override"
                },
                "grantModifyAccessToEveryone": {
                    "type": "boolean",
                    "description": "Whether modify access of new entites is granted to Everyone or to the Creator"
                },
                "deleted": {
                    "type": "boolean"
                }
            },
            "description": "Wavefront customer preferences entity"
        },
        "MetricDetailsResponse": {
            "type": "object",
            "properties": {
                "hosts": {
                    "type": "array",
                    "description": "List of sources/hosts reporting this metric",
                    "items": {
                        "$ref": "#/definitions/MetricDetails"
                    }
                }
            },
            "description": "Response container for MetricDetails"
        },
        "IteratorEntryStringJsonNode": {
            "type": "object"
        },
        "ResponseContainerPagedSource": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedSource"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerProxy": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/Proxy"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "IntegrationAlias": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the alias Integration"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon path of the alias Integration"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the alias Integration"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the alias Integration"
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL of this alias Integration"
                }
            },
            "description": "An integration that aliases this one"
        },
        "SourceLabelPair": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "host": {
                    "type": "string",
                    "description": "Source (or host).  \"Source\" and \"host\" are synonyms in current versions of wavefront, but the host terminology is deprecated"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "firing": {
                    "type": "integer",
                    "format": "int32"
                },
                "observed": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "description": "Convenience wrapper for the identifier of a unique series, which consists of a source (host) and a metric or aggregation (label)"
        },
        "ResponseContainerMapStringIntegrationStatus": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/IntegrationStatus"
                    }
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "InstallAlerts": {
            "type": "object",
            "properties": {
                "target": {
                    "type": "string"
                }
            },
            "description": "Install Alerts"
        },
        "ResponseContainerSource": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/Source"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerIntegration": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/Integration"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerPagedIntegration": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedIntegration"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "PagedDashboard": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Dashboard"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "ResponseContainerPagedAlertWithStats": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedAlertWithStats"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ChartSettings": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "min": {
                    "type": "number",
                    "format": "double",
                    "description": "Min value of Y-axis.  Set to null or leave blank for auto"
                },
                "type": {
                    "type": "string",
                    "description": "Chart Type.  'line' refers to the Line Plot, 'scatter' to the Point Plot, 'stacked-area' to the Stacked Area plot, 'table' to the Tabular View, 'scatterploy-xy' to Scatter Plot, 'markdown-widget' to the Markdown display, and 'sparkline' to the Single Stat view",
                    "enum": [
                        "line",
                        "scatterplot",
                        "stacked-area",
                        "table",
                        "scatterplot-xy",
                        "markdown-widget",
                        "sparkline"
                    ]
                },
                "max": {
                    "type": "number",
                    "format": "double",
                    "description": "Max value of Y-axis.  Set to null or leave blank for auto"
                },
                "expectedDataSpacing": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Threshold (in seconds) for time delta between consecutive points in a series above which a dotted line will replace a solid line in line plots.  Default: 60s"
                },
                "fixedLegendEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable a fixed tabular legend adjacent to the chart"
                },
                "fixedLegendUseRawStats": {
                    "type": "boolean",
                    "description": "If true, the legend uses non-summarized stats instead of summarized"
                },
                "plainMarkdownContent": {
                    "type": "string",
                    "description": "The Markdown content for a Markdown display, in plain text.  Use this field instead of `markdownContent`."
                },
                "lineType": {
                    "type": "string",
                    "description": "Plot interpolation type.  linear is default",
                    "enum": [
                        "linear",
                        "step-before",
                        "step-after",
                        "basis",
                        "cardinal",
                        "monotone"
                    ]
                },
                "stackType": {
                    "type": "string",
                    "description": "Type of stacked chart (applicable only if chart type is stacked).  zero (default) means stacked from y=0.  expand means Normalized from 0 to 1.  wiggle means Minimize weighted changes. silhouette means to Center the Stream",
                    "enum": [
                        "zero",
                        "expand",
                        "wiggle",
                        "silhouette"
                    ]
                },
                "windowing": {
                    "type": "string",
                    "description": "For the tabular view, whether to use the full time window for the query or the last X minutes",
                    "enum": [
                        "full",
                        "last"
                    ]
                },
                "windowSize": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Width, in minutes, of the time window to use for \"last\" windowing"
                },
                "showHosts": {
                    "type": "boolean",
                    "description": "For the tabular view, whether to display sources.  Default: true"
                },
                "showLabels": {
                    "type": "boolean",
                    "description": "For the tabular view, whether to display labels.  Default: true"
                },
                "showRawValues": {
                    "type": "boolean",
                    "description": "For the tabular view, whether to display raw values.  Default: false"
                },
                "autoColumnTags": {
                    "type": "boolean",
                    "description": "deprecated"
                },
                "columnTags": {
                    "type": "string",
                    "description": "deprecated"
                },
                "tagMode": {
                    "type": "string",
                    "description": "For the tabular view, which mode to use to determine which point tags to display",
                    "enum": [
                        "all",
                        "top",
                        "custom"
                    ]
                },
                "numTags": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For the tabular view, how many point tags to display"
                },
                "customTags": {
                    "type": "array",
                    "description": "For the tabular view, a list of point tags to display when using the \"custom\" tag display mode",
                    "items": {
                        "type": "string"
                    }
                },
                "groupBySource": {
                    "type": "boolean",
                    "description": "For the tabular view, whether to group multi metrics into a single row by a common source.  If false, each metric for each source is displayed in its own row.  If true, multiple metrics for the same host will be displayed as different columns in the same row"
                },
                "sortValuesDescending": {
                    "type": "boolean",
                    "description": "For the tabular view, whether to display display values in descending order.  Default: false"
                },
                "y1Max": {
                    "type": "number",
                    "format": "double",
                    "description": "For plots with multiple Y-axes, max value for right-side Y-axis.  Set null for auto"
                },
                "y1Min": {
                    "type": "number",
                    "format": "double",
                    "description": "For plots with multiple Y-axes, min value for right-side Y-axis.  Set null for auto"
                },
                "y1Units": {
                    "type": "string",
                    "description": "For plots with multiple Y-axes, units for right-side Y-axis"
                },
                "y0ScaleSIBy1024": {
                    "type": "boolean",
                    "description": "Default: false. Whether to scale numerical magnitude labels for left Y-axis by 1024 in the IEC/Binary manner (instead of by 1000 like SI)"
                },
                "y1ScaleSIBy1024": {
                    "type": "boolean",
                    "description": "Default: false. Whether to scale numerical magnitude labels for right Y-axis by 1024 in the IEC/Binary manner (instead of by 1000 like SI)"
                },
                "y0UnitAutoscaling": {
                    "type": "boolean",
                    "description": "Default: false. Whether to automatically adjust magnitude labels and units for the left Y-axis to favor smaller magnitudes and larger units"
                },
                "y1UnitAutoscaling": {
                    "type": "boolean",
                    "description": "Default: false. Whether to automatically adjust magnitude labels and units for the right Y-axis to favor smaller magnitudes and larger units"
                },
                "invertDynamicLegendHoverControl": {
                    "type": "boolean",
                    "description": "Whether to disable the display of the floating legend (but reenable it when the ctrl-key is pressed)"
                },
                "fixedLegendPosition": {
                    "type": "string",
                    "description": "Where the fixed legend should be displayed with respect to the chart",
                    "enum": [
                        "RIGHT",
                        "TOP",
                        "LEFT",
                        "BOTTOM"
                    ]
                },
                "fixedLegendDisplayStats": {
                    "type": "array",
                    "description": "For a chart with a fixed legend, a list of statistics to display in the legend",
                    "items": {
                        "type": "string"
                    }
                },
                "fixedLegendFilterSort": {
                    "type": "string",
                    "description": "Whether to display \"Top\"- or \"Bottom\"-ranked series in the fixed legend",
                    "enum": [
                        "TOP",
                        "BOTTOM"
                    ]
                },
                "fixedLegendFilterLimit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of series to include in the fixed legend"
                },
                "fixedLegendFilterField": {
                    "type": "string",
                    "description": "Statistic to use for determining whether a series is displayed on the fixed legend",
                    "enum": [
                        "CURRENT",
                        "MEAN",
                        "MEDIAN",
                        "SUM",
                        "MIN",
                        "MAX",
                        "COUNT"
                    ]
                },
                "fixedLegendHideLabel": {
                    "type": "boolean",
                    "description": "deprecated"
                },
                "xmax": {
                    "type": "number",
                    "format": "double",
                    "description": "For x-y scatterplots, max value for X-axis.  Set null for auto"
                },
                "xmin": {
                    "type": "number",
                    "format": "double",
                    "description": "For x-y scatterplots, min value for X-axis.  Set null for auto"
                },
                "ymax": {
                    "type": "number",
                    "format": "double",
                    "description": "For x-y scatterplots, max value for Y-axis.  Set null for auto"
                },
                "ymin": {
                    "type": "number",
                    "format": "double",
                    "description": "For x-y scatterplots, min value for Y-axis.  Set null for auto"
                },
                "timeBasedColoring": {
                    "type": "boolean",
                    "description": "Fox x-y scatterplots, whether to color more recent points as darker than older points. Default: false"
                },
                "sparklineDisplayValueType": {
                    "type": "string",
                    "description": "For the single stat view, whether to display the name of the query or the value of query",
                    "enum": [
                        "VALUE",
                        "LABEL"
                    ]
                },
                "sparklineDisplayColor": {
                    "type": "string",
                    "description": "For the single stat view, the color of the displayed text (when not dynamically determined). Values should be in\"rgba(<rval>, <gval>, <bval>, <aval>\" format"
                },
                "sparklineDisplayVerticalPosition": {
                    "type": "string",
                    "description": "deprecated"
                },
                "sparklineDisplayHorizontalPosition": {
                    "type": "string",
                    "description": "For the single stat view, the horizontal position of the displayed text",
                    "enum": [
                        "MIDDLE",
                        "LEFT",
                        "RIGHT"
                    ]
                },
                "sparklineDisplayFontSize": {
                    "type": "string",
                    "description": "For the single stat view, the font size of the displayed text, in percent"
                },
                "sparklineDisplayPrefix": {
                    "type": "string",
                    "description": "For the single stat view, a string to add before the displayed text"
                },
                "sparklineDisplayPostfix": {
                    "type": "string",
                    "description": "For the single stat view, a string to append to the displayed text"
                },
                "sparklineSize": {
                    "type": "string",
                    "description": "For the single stat view, a misleadingly named property.  This determines whether the sparkline of the statistic is displayed in the chart BACKGROUND, BOTTOM, or NONE",
                    "enum": [
                        "BACKGROUND",
                        "BOTTOM",
                        "NONE"
                    ]
                },
                "sparklineLineColor": {
                    "type": "string",
                    "description": "For the single stat view, the color of the line. Values should be in\"rgba(<rval>, <gval>, <bval>, <aval>\" format"
                },
                "sparklineFillColor": {
                    "type": "string",
                    "description": "For the single stat view, the color of the background fill. Values should be in\"rgba(<rval>, <gval>, <bval>, <aval>\" format"
                },
                "sparklineValueColorMapColors": {
                    "type": "array",
                    "description": "For the single stat view, a list of colors that differing query values map to.  Must contain one more element than sparklineValueColorMapValuesV2. Values should be in\"rgba(<rval>, <gval>, <bval>, <aval>\" format",
                    "items": {
                        "type": "string"
                    }
                },
                "sparklineValueColorMapValuesV2": {
                    "type": "array",
                    "description": "For the single stat view, a list of boundaries for mapping different query values to colors.  Must contain one less element than sparklineValueColorMapColors",
                    "items": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "sparklineValueColorMapValues": {
                    "type": "array",
                    "description": "deprecated",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "sparklineValueColorMapApplyTo": {
                    "type": "string",
                    "description": "For the single stat view, whether to apply dynamic color settings to the displayed TEXT or BACKGROUND",
                    "enum": [
                        "TEXT",
                        "BACKGROUND"
                    ]
                },
                "sparklineDecimalPrecision": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For the single stat view, the decimal precision of the displayed number"
                },
                "sparklineValueTextMapText": {
                    "type": "array",
                    "description": "For the single stat view, a list of display text values that different query values map to.  Must contain one more element than sparklineValueTextMapThresholds",
                    "items": {
                        "type": "string"
                    }
                },
                "sparklineValueTextMapThresholds": {
                    "type": "array",
                    "description": "For the single stat view, a list of threshold boundaries for mapping different query values to display text. Must contain one less element than sparklineValueTextMapText",
                    "items": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "description": "Representation of the settings of a Wavefront chart"
        },
        "ResponseContainerListACL": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ACL"
                    }
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "FacetsSearchRequestContainer": {
            "type": "object",
            "required": [
                "facets"
            ],
            "properties": {
                "query": {
                    "type": "array",
                    "description": "A list of queries by which to limit the search results.  Entities that match ALL queries in this list constitute a set of 'entity search results'.  All facets listed in the 'facets' search parameter of all entities within 'entity search results' are scanned to produce the search results (of facet values).",
                    "items": {
                        "$ref": "#/definitions/SearchQuery"
                    }
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of results to return.  Default 100"
                },
                "facets": {
                    "type": "array",
                    "description": "A list of facets (property keys) to return values from found in entities matching 'query'.  Examples are 'tags', 'creatorId', etc",
                    "items": {
                        "type": "string"
                    }
                },
                "facetQuery": {
                    "type": "string",
                    "description": "A string against which facet results are compared.  If the facet result either CONTAINs, STARTSWITH, or is an EXACT match for this value, as specified by facetQueryMatchingMethod, then it is returned"
                },
                "facetQueryMatchingMethod": {
                    "type": "string",
                    "description": "The matching method used to filter when 'facetQuery' is used. Defaults to CONTAINS.",
                    "enum": [
                        "CONTAINS",
                        "STARTSWITH",
                        "EXACT",
                        "TAGPATH"
                    ]
                }
            }
        },
        "TargetInfo": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "description": "Notification method of the alert target",
                    "readOnly": true,
                    "enum": [
                        "EMAIL",
                        "PAGERDUTY",
                        "WEBHOOK"
                    ]
                },
                "id": {
                    "type": "string",
                    "description": "ID of the alert target",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the alert target",
                    "readOnly": true
                }
            },
            "description": "Alert target display information that includes type, id, and the name of the alert target."
        },
        "HistoryEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "inTrash": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int64"
                },
                "updateUser": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "integer",
                    "format": "int64"
                },
                "changeDescription": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "An entry in the edit-history of an entity such as alert or dashboard"
        },
        "ResponseContainerIntegrationStatus": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/IntegrationStatus"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "EventSearchRequest": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "string",
                    "description": "The id (exclusive) from which search results resume returning.  Users should supply an entity 'id' to this property.  Its main purpose is to resume where a previous search left off because of the 'limit' parameter.  If a user supplies the last id in a set of results to cursor, while keeping the query the same, the system will return the next page of results"
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "example": 100,
                    "description": "The number of results to return.  Default: 100"
                },
                "query": {
                    "type": "array",
                    "description": "A list of queries by which to limit the search results",
                    "items": {
                        "$ref": "#/definitions/SearchQuery"
                    }
                },
                "timeRange": {
                    "$ref": "#/definitions/EventTimeRange"
                },
                "sortTimeAscending": {
                    "type": "boolean",
                    "description": "Whether to sort event results ascending in start time.  Default: false"
                }
            }
        },
        "MaintenanceWindow": {
            "type": "object",
            "required": [
                "endTimeInSeconds",
                "reason",
                "relevantCustomerTags",
                "startTimeInSeconds",
                "title"
            ],
            "properties": {
                "reason": {
                    "type": "string",
                    "description": "The purpose of this maintenance window"
                },
                "id": {
                    "type": "string"
                },
                "customerId": {
                    "type": "string",
                    "readOnly": true
                },
                "title": {
                    "type": "string",
                    "description": "Title of this maintenance window"
                },
                "startTimeInSeconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time in epoch seconds when this maintenance window will start"
                },
                "endTimeInSeconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time in epoch seconds when this maintenance window will end"
                },
                "relevantHostTags": {
                    "type": "array",
                    "description": "List of source/host tags whose matching sources/hosts will be put into maintenance because of this maintenance window",
                    "items": {
                        "type": "string"
                    }
                },
                "relevantHostNames": {
                    "type": "array",
                    "description": "List of source/host names that will be put into maintenance because of this maintenance window",
                    "items": {
                        "type": "string"
                    }
                },
                "relevantCustomerTags": {
                    "type": "array",
                    "description": "List of alert tags whose matching alerts will be put into maintenance because of this maintenance window",
                    "items": {
                        "type": "string"
                    }
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "relevantHostTagsAnded": {
                    "type": "boolean",
                    "description": "Whether to AND source/host tags listed in relevantHostTags. If true, a source/host must contain all tags in order for the maintenance window to apply.  If false, the tags are OR'ed, and a source/host must contain one of the tags. Default: false"
                },
                "hostTagGroupHostNamesGroupAnded": {
                    "type": "boolean",
                    "description": "If true, a source/host must be in 'relevantHostNames' and have tags matching the specification formed by 'relevantHostTags' and 'relevantHostTagsAnded' in order for this maintenance window to apply. If false, a source/host must either be in 'relevantHostNames' or match 'relevantHostTags' and 'relevantHostTagsAnded'. Default: false"
                },
                "eventName": {
                    "type": "string",
                    "description": "The name of an event associated with the creation/update of this maintenance window",
                    "readOnly": true
                },
                "sortAttr": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Numeric value used in default sorting",
                    "readOnly": true
                },
                "runningState": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ONGOING",
                        "PENDING",
                        "ENDED"
                    ]
                }
            },
            "description": "Wavefront maintenance window entity"
        },
        "ResponseContainerUserGroup": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/UserGroup"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerPagedDashboard": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedDashboard"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerFacetResponse": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/FacetResponse"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerPagedUserGroup": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedUserGroup"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerAlert": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/Alert"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "DashboardSectionRow": {
            "type": "object",
            "required": [
                "charts"
            ],
            "properties": {
                "heightFactor": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Scalar for the height of this row. 100 is normal and default. 50 is half height"
                },
                "charts": {
                    "type": "array",
                    "description": "Charts in this section row",
                    "items": {
                        "$ref": "#/definitions/Chart"
                    }
                }
            }
        },
        "SavedSearch": {
            "type": "object",
            "required": [
                "entityType",
                "query"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "query": {
                    "type": "object",
                    "description": "The map corresponding to the search query.  The key is the name of the query, and the value is a JSON representation of the query",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "entityType": {
                    "type": "string",
                    "description": "The Wavefront entity type over which to search",
                    "enum": [
                        "DASHBOARD",
                        "ALERT",
                        "MAINTENANCE_WINDOW",
                        "NOTIFICANT",
                        "EVENT",
                        "SOURCE",
                        "EXTERNAL_LINK",
                        "AGENT",
                        "CLOUD_INTEGRATION",
                        "APPLICATION",
                        "REGISTERED_QUERY",
                        "USER",
                        "USER_GROUP"
                    ]
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "userId": {
                    "type": "string",
                    "description": "The user for whom this search is saved",
                    "readOnly": true
                }
            },
            "description": "Saved queries for searches over Wavefront entities"
        },
        "Timeseries": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label of this timeseries"
                },
                "host": {
                    "type": "string",
                    "description": "Source/Host of this timeseries"
                },
                "tags": {
                    "type": "object",
                    "description": "Tags (key-value annotations) of this timeseries",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "data": {
                    "type": "array",
                    "description": "Data returned by this time series.  This is returned as a list of points, where each point is represented as a two-element list with 1st element being the timestamp in epoch SECONDS and the 2nd element being the numeric value of the series at the timestamp",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                }
            }
        },
        "PagedProxy": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Proxy"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "FacetSearchRequestContainer": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of results to return.  Default: 100"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of results to skip before returning values.  Default: 0"
                },
                "query": {
                    "type": "array",
                    "description": "A list of queries by which to limit the search results.  Entities that match ALL queries in the list are returned",
                    "items": {
                        "$ref": "#/definitions/SearchQuery"
                    }
                },
                "facetQuery": {
                    "type": "string",
                    "description": "A string against which facet results are compared.  If the facet result CONTAINs, STARTSWITH, or is an EXACT match for this value, as specified by facetQueryMatchingMethod, then it is returned."
                },
                "facetQueryMatchingMethod": {
                    "type": "string",
                    "description": "The matching method used to filter when 'facetQuery' is used. Defaults to CONTAINS.",
                    "enum": [
                        "CONTAINS",
                        "STARTSWITH",
                        "EXACT",
                        "TAGPATH"
                    ]
                }
            }
        },
        "AccessControlElement": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "UserModel": {
            "type": "object",
            "required": [
                "customer",
                "groups",
                "identifier",
                "userGroups"
            ],
            "properties": {
                "identifier": {
                    "type": "string",
                    "description": "The unique identifier of this user, which must be their valid email address"
                },
                "customer": {
                    "type": "string",
                    "description": "The id of the customer to which this user belongs"
                },
                "ssoId": {
                    "type": "string"
                },
                "lastSuccessfulLogin": {
                    "type": "integer",
                    "format": "int64"
                },
                "groups": {
                    "type": "array",
                    "description": "The permissions granted to this user",
                    "items": {
                        "type": "string"
                    }
                },
                "userGroups": {
                    "type": "array",
                    "description": "The list of user groups the user belongs to",
                    "items": {
                        "$ref": "#/definitions/UserGroup"
                    }
                }
            },
            "description": "Model for an user object"
        },
        "ResponseContainerMaintenanceWindow": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/MaintenanceWindow"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "CloudWatchConfiguration": {
            "type": "object",
            "properties": {
                "metricFilterRegex": {
                    "type": "string",
                    "example": "^aws.(billing|instance|sqs|sns|reservedInstance|ebs|route53.health|ec2.status|elb).*$",
                    "description": "A regular expression that a CloudWatch metric name must match (case-insensitively) in order to be ingested"
                },
                "namespaces": {
                    "type": "array",
                    "description": "A list of namespace that limit what we query from CloudWatch.",
                    "items": {
                        "type": "string"
                    }
                },
                "baseCredentials": {
                    "$ref": "#/definitions/AWSBaseCredentials"
                },
                "instanceSelectionTags": {
                    "type": "object",
                    "description": "A comma-separated white list of AWS instance tag-value pairs (in AWS).  If the instance's AWS tags match this whitelist, CloudWatch data about this instance is ingested.  Multiple entries are OR'ed",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "volumeSelectionTags": {
                    "type": "object",
                    "description": "A comma-separated white list of AWS volume tag-value pairs (in AWS).  If the volume's AWS tags match this whitelist, CloudWatch data about this volume is ingested.  Multiple entries are OR'ed",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "pointTagFilterRegex": {
                    "type": "string",
                    "example": "(region|name)",
                    "description": "A regular expression that AWS tag key name must match (case-insensitively) in order to be ingested"
                }
            },
            "description": "Configuration specific to the CloudWatch AWS integration.  Only applicable when the containing Credential has service=CLOUDWATCH"
        },
        "QueryResult": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of this query"
                },
                "query": {
                    "type": "string",
                    "description": "The query used to obtain this result"
                },
                "warnings": {
                    "type": "string",
                    "description": "The warnings incurred by this query"
                },
                "timeseries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Timeseries"
                    }
                },
                "stats": {
                    "$ref": "#/definitions/StatsModel"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QueryEvent"
                    }
                },
                "granularity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The granularity of the returned results, in seconds"
                }
            }
        },
        "BusinessActionGroupBasicDTO": {
            "type": "object",
            "properties": {
                "groupName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "requiredDefault": {
                    "type": "boolean"
                }
            }
        },
        "TagsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "type": "string"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "ResponseContainerPagedMaintenanceWindow": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedMaintenanceWindow"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerListIntegration": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Integration"
                    }
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "MetricDetails": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The source reporting this metric"
                },
                "last_update": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Approximate time of last reporting, in milliseconds since the Unix epoch"
                },
                "tags": {
                    "type": "object",
                    "description": "A key-value map of the point tags associated with this source",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Details of the reporting metric"
        },
        "Chart": {
            "type": "object",
            "required": [
                "name",
                "sources"
            ],
            "properties": {
                "units": {
                    "type": "string",
                    "description": "String to label the units of the chart on the Y-axis"
                },
                "base": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the chart has a log-scale Y-axis, the base for the logarithms"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the chart"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the source"
                },
                "chartAttributes": {
                    "description": "Experimental field for chart attributes",
                    "$ref": "#/definitions/JsonNode"
                },
                "chartSettings": {
                    "$ref": "#/definitions/ChartSettings"
                },
                "sources": {
                    "type": "array",
                    "description": "Query expression to plot on the chart",
                    "items": {
                        "$ref": "#/definitions/ChartSourceQuery"
                    }
                },
                "includeObsoleteMetrics": {
                    "type": "boolean",
                    "description": "Whether to show obsolete metrics.  Default: false"
                },
                "noDefaultEvents": {
                    "type": "boolean",
                    "description": "Whether to hide events related to the sources in the charts produced. Default false (i.e. shows events)"
                },
                "interpolatePoints": {
                    "type": "boolean",
                    "description": "Whether to interpolate points in the charts produced. Default: true"
                },
                "summarization": {
                    "type": "string",
                    "description": "Summarization strategy for the chart.  MEAN is default",
                    "enum": [
                        "MEAN",
                        "MEDIAN",
                        "MIN",
                        "MAX",
                        "SUM",
                        "COUNT",
                        "LAST",
                        "FIRST"
                    ]
                }
            },
            "description": "Representation of a Wavefront chart"
        },
        "GCPConfiguration": {
            "type": "object",
            "required": [
                "gcpJsonKey",
                "projectId"
            ],
            "properties": {
                "metricFilterRegex": {
                    "type": "string",
                    "example": "^gcp.(compute|container|pubsub).*$",
                    "description": "A regular expression that a metric name must match (case-insensitively) in order to be ingested"
                },
                "projectId": {
                    "type": "string",
                    "description": "The Google Cloud Platform (GCP) project id."
                },
                "categoriesToFetch": {
                    "type": "array",
                    "description": "A list of Google Cloud Platform (GCP) services (such as ComputeEngine, PubSub, etc) from which to pull metrics.  Allowable values are APPENGINE, BIGQUERY, BIGTABLE, CLOUDFUNCTIONS, CLOUDIOT, CLOUDSQL, CLOUDTASKS, COMPUTE, CONTAINER, DATAFLOW, DATASTORE, FIREBASEDATABASE, FIREBASEHOSTING, LOGGING, ML, PUBSUB, ROUTER, SPANNER, STORAGE, VPN",
                    "items": {
                        "type": "string",
                        "enum": [
                            "APPENGINE",
                            "BIGQUERY",
                            "BIGTABLE",
                            "CLOUDFUNCTIONS",
                            "CLOUDIOT",
                            "CLOUDSQL",
                            "CLOUDTASKS",
                            "COMPUTE",
                            "CONTAINER",
                            "DATAFLOW",
                            "DATAPROC",
                            "DATASTORE",
                            "FIREBASEDATABASE",
                            "FIREBASEHOSTING",
                            "INTERCONNECT",
                            "LOADBALANCING",
                            "LOGGING",
                            "ML",
                            "MONITORING",
                            "PUBSUB",
                            "REDIS",
                            "ROUTER",
                            "SERVICERUNTIME",
                            "SPANNER",
                            "STORAGE",
                            "TPU",
                            "VPN"
                        ]
                    }
                },
                "gcpJsonKey": {
                    "type": "string",
                    "description": "Private key for a Google Cloud Platform (GCP) service account within your project.  The account must at least be granted Monitoring Viewer permissions.  This key must be in the JSON format generated by GCP. Use '{\"project_id\": \"%s\"}' to retain the existing key when updating."
                }
            },
            "description": "Configurations specific to the Google Cloud Platform integration.  Only applicable when the containing Credential has service=GCP"
        },
        "SearchQuery": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The entity facet (key) by which to search.  Valid keys are any property keys returned by the JSON representation of the entity.  Examples are 'creatorId', 'name', etc.  The following special key keywords are also valid:  'tags' performs a search on entity tags, 'tagpath' performs a hierarchical search on tags, with  periods (.) as path level separators.  'freetext' performs a free text search across many fields of the entity"
                },
                "value": {
                    "type": "string",
                    "description": "The entity facet value for which to search"
                },
                "matchingMethod": {
                    "type": "string",
                    "description": "The method by which search matching is performed.  Default: CONTAINS",
                    "enum": [
                        "CONTAINS",
                        "STARTSWITH",
                        "EXACT",
                        "TAGPATH"
                    ]
                }
            }
        },
        "PagedMessage": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Message"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "ResponseContainerTagsResponse": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/TagsResponse"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "NewRelicConfiguration": {
            "type": "object",
            "required": [
                "apiKey"
            ],
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "New Relic REST API Key."
                },
                "appFilterRegex": {
                    "type": "string",
                    "example": "^hostingservice-(prod|dev)*$",
                    "description": "A regular expression that a application name must match (case-insensitively) in order to collect metrics."
                },
                "hostFilterRegex": {
                    "type": "string",
                    "example": "host[1-9].xyz.com",
                    "description": "A regular expression that a host name must match (case-insensitively) in order to collect metrics."
                },
                "newRelicMetricFilters": {
                    "type": "array",
                    "description": "Application specific metric filter",
                    "items": {
                        "$ref": "#/definitions/NewRelicMetricFilters"
                    }
                }
            },
            "description": "Configurations specific to the NewRelic integration.  Only applicable when the containing Credential has service=NEWRELIC"
        },
        "IntegrationStatus": {
            "type": "object",
            "required": [
                "alertStatuses",
                "contentStatus",
                "installStatus",
                "metricStatuses"
            ],
            "properties": {
                "alertStatuses": {
                    "type": "object",
                    "description": "A Map from the ids of the alerts contained in this integration to their install status.  The install status can take on one of three values, `VISIBLE`, `HIDDEN`, and `NOT_LOADED`",
                    "readOnly": true,
                    "additionalProperties": {
                        "type": "string",
                        "enum": [
                            "VISIBLE",
                            "HIDDEN",
                            "NOT_LOADED"
                        ]
                    }
                },
                "contentStatus": {
                    "type": "string",
                    "description": "Status of integration content, e.g. dashboards",
                    "readOnly": true,
                    "enum": [
                        "INVALID",
                        "NOT_LOADED",
                        "HIDDEN",
                        "VISIBLE"
                    ]
                },
                "installStatus": {
                    "type": "string",
                    "description": "Whether the customer or an automated process has installed the dashboards for this integration",
                    "readOnly": true,
                    "enum": [
                        "UNDECIDED",
                        "UNINSTALLED",
                        "INSTALLED"
                    ]
                },
                "metricStatuses": {
                    "type": "object",
                    "description": "A Map from names of the required metrics to an object representing their reporting status.  The reporting status object has 3 boolean fields denoting whether the metric has been received during the corresponding time period: `ever`, `recentExceptNow`, and `now`.  `now` is on the order of a few hours, and `recentExceptNow` is on the order of the past few days, excluding the period considered to be `now`.",
                    "readOnly": true,
                    "additionalProperties": {
                        "$ref": "#/definitions/MetricStatus"
                    }
                }
            },
            "description": "Status of this integration"
        },
        "PagedAlertWithStats": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Alert"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                },
                "alertCounts": {
                    "type": "object",
                    "description": "A map from alert state to the number of alerts in that state within the search results",
                    "readOnly": true,
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "ACL": {
            "type": "object",
            "required": [
                "entityId",
                "modifyAcl",
                "viewAcl"
            ],
            "properties": {
                "entityId": {
                    "type": "string",
                    "description": "The entity Id"
                },
                "viewAcl": {
                    "type": "array",
                    "description": "List of users and user group ids that have view permission",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/AccessControlElement"
                    }
                },
                "modifyAcl": {
                    "type": "array",
                    "description": "List of users and user groups ids that have modify permission",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/AccessControlElement"
                    }
                }
            },
            "description": "Api model for ACL"
        },
        "UserRequestDTO": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "ssoId": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AzureConfiguration": {
            "type": "object",
            "properties": {
                "metricFilterRegex": {
                    "type": "string",
                    "example": "^azure.(compute|network|dbforpostgresql).*$",
                    "description": "A regular expression that a metric name must match (case-insensitively) in order to be ingested"
                },
                "baseCredentials": {
                    "$ref": "#/definitions/AzureBaseCredentials"
                },
                "categoryFilter": {
                    "type": "array",
                    "description": "A list of Azure services (such as Microsoft.Compute/virtualMachines, Microsoft.Cache/redis etc) from which to pull metrics.",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceGroupFilter": {
                    "type": "array",
                    "description": "A list of Azure resource groups from which to pull metrics.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "Configurations specific to the Azure integration. Only applicable when the containing Credential has service=AZURE"
        },
        "Event": {
            "type": "object",
            "required": [
                "annotations",
                "name",
                "startTime"
            ],
            "properties": {
                "startTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Start time of the event, in epoch millis.  If the JSON value is missing or set to 0, startTime will be set to the current time"
                },
                "endTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "End time of the event, in epoch millis.  Set to startTime + 1 for an instantaneous event"
                },
                "table": {
                    "type": "string",
                    "description": "The customer to which the event belongs",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the event.  If 'annotations.prettyName' is present, 'name' will be equivalent to that value"
                },
                "annotations": {
                    "type": "object",
                    "description": "A string->string map of additional annotations on the event",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "canDelete": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canClose": {
                    "type": "boolean",
                    "readOnly": true
                },
                "creatorType": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ALERT",
                            "SYSTEM"
                        ]
                    }
                },
                "tags": {
                    "type": "array",
                    "description": "A list of event tags",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "isUserEvent": {
                    "type": "boolean",
                    "description": "Whether this event was created by a user, versus the system.  Default: system",
                    "readOnly": true
                },
                "isEphemeral": {
                    "type": "boolean",
                    "description": "Whether the event is an artificial event generated by a literal expression or alert backtesting, i.e. not stored in the Wavefront backend",
                    "readOnly": true
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "updatedAt": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "summarizedEvents": {
                    "type": "integer",
                    "format": "int64",
                    "description": "In some event queries, multiple events that occur nearly simultaneously are summarized under a single event.  This value specifies the number of events summarized under this one",
                    "readOnly": true
                },
                "hosts": {
                    "type": "array",
                    "description": "A list of sources/hosts affected by the event",
                    "items": {
                        "type": "string"
                    }
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "runningState": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ONGOING",
                        "PENDING",
                        "ENDED"
                    ]
                }
            },
            "description": "Wavefront Event"
        },
        "ResponseContainerPagedNotificant": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedNotificant"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerPagedAlert": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedAlert"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainer": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "type": "object"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "PagedAlert": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Alert"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "ResponseContainerListIntegrationManifestGroup": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntegrationManifestGroup"
                    }
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "LogicalType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Dashboard": {
            "type": "object",
            "required": [
                "id",
                "name",
                "sections",
                "url"
            ],
            "properties": {
                "canUserModify": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Human-readable description of the dashboard"
                },
                "hidden": {
                    "type": "boolean",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the dashboard"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier, also URL slug, of the dashboard"
                },
                "parameters": {
                    "type": "object",
                    "description": "Deprecated.  An obsolete representation of dashboard parameters",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tags": {
                    "$ref": "#/definitions/WFTags"
                },
                "customer": {
                    "type": "string",
                    "description": "id of the customer to which this dashboard belongs",
                    "readOnly": true
                },
                "url": {
                    "type": "string",
                    "description": "Unique identifier, also URL slug, of the dashboard"
                },
                "systemOwned": {
                    "type": "boolean",
                    "description": "Whether this dashboard is system-owned and not writeable",
                    "readOnly": true
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "eventFilterType": {
                    "type": "string",
                    "description": "How charts belonging to this dashboard should display events.  BYCHART is default if unspecified",
                    "enum": [
                        "BYCHART",
                        "AUTOMATIC",
                        "ALL",
                        "NONE",
                        "BYDASHBOARD",
                        "BYCHARTANDDASHBOARD"
                    ]
                },
                "sections": {
                    "type": "array",
                    "description": "Dashboard chart sections",
                    "items": {
                        "$ref": "#/definitions/DashboardSection"
                    }
                },
                "parameterDetails": {
                    "type": "object",
                    "description": "The current (as of Wavefront 4.0) JSON representation of dashboard parameters.  This is a map from a parameter name to its representation",
                    "additionalProperties": {
                        "$ref": "#/definitions/DashboardParameterValue"
                    }
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "displayDescription": {
                    "type": "boolean",
                    "description": "Whether the dashboard description section is opened by default when the dashboard is shown"
                },
                "displaySectionTableOfContents": {
                    "type": "boolean",
                    "description": "Whether the \"pills\" quick-linked the sections of the dashboard are displayed by default when the dashboard is shown"
                },
                "displayQueryParameters": {
                    "type": "boolean",
                    "description": "Whether the dashboard parameters section is opened by default when the dashboard is shown"
                },
                "chartTitleScalar": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Scale (normally 100) of chart title text size"
                },
                "eventQuery": {
                    "type": "string",
                    "description": "Event query to run on dashboard charts"
                },
                "defaultTimeWindow": {
                    "type": "string",
                    "description": "Default time window to query charts"
                },
                "defaultStartTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Default start time in milliseconds to query charts"
                },
                "defaultEndTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Default end time in milliseconds to query charts"
                },
                "chartTitleColor": {
                    "type": "string",
                    "description": "Text color of the chart title text are, in rgba(rvalue,gvalue,bvalue,avalue)"
                },
                "chartTitleBgColor": {
                    "type": "string",
                    "description": "Background color of the chart title text area, in rgba(rvalue,gvalue,bvalue,avalue)"
                },
                "viewsLastDay": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "viewsLastWeek": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "viewsLastMonth": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "acl": {
                    "readOnly": true,
                    "$ref": "#/definitions/AccessControlListSimple"
                },
                "deleted": {
                    "type": "boolean",
                    "readOnly": true
                },
                "numCharts": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "numFavorites": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "favorite": {
                    "type": "boolean",
                    "readOnly": true
                },
                "orphan": {
                    "type": "boolean",
                    "readOnly": true
                }
            },
            "description": "Wavefront dashboard entity"
        },
        "PagedDerivedMetricDefinitionWithStats": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/DerivedMetricDefinition"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                },
                "counts": {
                    "type": "object",
                    "description": "A map from the state of the derived metric definition to the number of entities in that state within the search results",
                    "readOnly": true,
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "ResponseContainerPagedProxy": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedProxy"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerFacetsResponseContainer": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/FacetsResponseContainer"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "QueryEvent": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Event name"
                },
                "start": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Start time of event, in epoch millis"
                },
                "end": {
                    "type": "integer",
                    "format": "int64",
                    "description": "End time of event, in epoch millis"
                },
                "tags": {
                    "type": "object",
                    "description": "Tags (annotations) on the event",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hosts": {
                    "type": "array",
                    "description": "Sources (hosts) to which the event pertains",
                    "items": {
                        "type": "string"
                    }
                },
                "summarized": {
                    "type": "integer",
                    "format": "int64",
                    "description": "In some event queries, multiple events that occur nearly simultaneously are summarized under a single event.  This value specifies the number of events summarized under this one"
                },
                "isEphemeral": {
                    "type": "boolean",
                    "description": "Whether the event is an artificial event generated by a literal expression or alert backtesting, i.e. not stored in the Wavefront backend"
                }
            },
            "description": "A representation of events as returned by the querying api, rather than the event api"
        },
        "PagedSavedSearch": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/SavedSearch"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "DerivedMetricDefinition": {
            "type": "object",
            "required": [
                "minutes",
                "name",
                "query"
            ],
            "properties": {
                "created": {
                    "type": "integer",
                    "format": "int64",
                    "description": "When this derived metric was created, in epoch millis",
                    "readOnly": true
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "query": {
                    "type": "string",
                    "description": "A Wavefront query that is evaluated at regular intervals (default 1m)."
                },
                "minutes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "How frequently the query generating the derived metric is run"
                },
                "tags": {
                    "$ref": "#/definitions/WFTags"
                },
                "status": {
                    "type": "array",
                    "description": "Lists the current state of the derived metric. Can be one or more of: INVALID, ACTIVE, TRASH, NO_DATA",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "updated": {
                    "type": "integer",
                    "format": "int64",
                    "description": "When the derived metric definition was last updated, in epoch millis",
                    "readOnly": true
                },
                "processRateMinutes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The interval between executing the query, in minutes.  Defaults to 1 minute"
                },
                "lastProcessedMillis": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The last time when the derived metric query was run, in epoch millis",
                    "readOnly": true
                },
                "updateUserId": {
                    "type": "string",
                    "description": "The user that last updated this derived metric definition",
                    "readOnly": true
                },
                "additionalInformation": {
                    "type": "string",
                    "description": "User-supplied additional explanatory information for the derived metric"
                },
                "lastQueryTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time for the query execute, averaged on hourly basis",
                    "readOnly": true
                },
                "inTrash": {
                    "type": "boolean"
                },
                "queryFailing": {
                    "type": "boolean",
                    "description": "Whether there was an exception when the query last ran",
                    "readOnly": true
                },
                "createUserId": {
                    "type": "string",
                    "readOnly": true
                },
                "lastFailedTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time of the last error encountered when running the query, in epoch millis",
                    "readOnly": true
                },
                "pointsScannedAtLastQuery": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A derived field recording the number of data points scanned when the system last computed the query",
                    "readOnly": true
                },
                "includeObsoleteMetrics": {
                    "type": "boolean",
                    "description": "Whether to include obsolete metrics in query"
                },
                "metricsUsed": {
                    "type": "array",
                    "description": "Number of metrics checked by the query",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "hostsUsed": {
                    "type": "array",
                    "description": "Number of hosts checked by the query",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "lastErrorMessage": {
                    "type": "string",
                    "description": "The last error encountered when running the query",
                    "readOnly": true
                },
                "queryQBEnabled": {
                    "type": "boolean",
                    "description": "Whether the query was created using the Query Builder. Default false"
                },
                "queryQBSerialization": {
                    "type": "string",
                    "description": "The special serialization of the Query Builder that corresponds to the query.  Applicable only when queryQBEnabled is true"
                },
                "deleted": {
                    "type": "boolean",
                    "readOnly": true
                }
            },
            "description": "Wavefront Derived Metric"
        },
        "PagedNotificant": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Notificant"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "IntegrationDashboard": {
            "type": "object",
            "required": [
                "description",
                "name",
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Dashboard description"
                },
                "name": {
                    "type": "string",
                    "description": "Dashboard name"
                },
                "dashboardObj": {
                    "$ref": "#/definitions/Dashboard"
                },
                "url": {
                    "type": "string",
                    "description": "URL path to the JSON definition of this dashboard"
                }
            },
            "description": "A dashboard definition belonging to a particular integration"
        },
        "ResponseContainerExternalLink": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/ExternalLink"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "PagedCustomerFacingUserObject": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/CustomerFacingUserObject"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "PagedIntegration": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Integration"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "PagedSource": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Source"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "ResponseContainerPagedCloudIntegration": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedCloudIntegration"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "UserSettings": {
            "type": "object",
            "properties": {
                "preferredTimeZone": {
                    "type": "string"
                },
                "chartTitleScalar": {
                    "type": "integer",
                    "format": "int32"
                },
                "showQuerybuilderByDefault": {
                    "type": "boolean"
                },
                "hideTSWhenQuerybuilderShown": {
                    "type": "boolean"
                },
                "alwaysHideQuerybuilder": {
                    "type": "boolean"
                },
                "use24HourTime": {
                    "type": "boolean"
                },
                "useDarkTheme": {
                    "type": "boolean"
                },
                "landingDashboardSlug": {
                    "type": "string"
                },
                "showOnboarding": {
                    "type": "boolean"
                }
            }
        },
        "EventTimeRange": {
            "type": "object",
            "properties": {
                "earliestStartTimeEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Start of search time window, in milliseconds since the Unix Epoch.  Events whose start time occurs after this value will be returned.  If no value is supplied, defaults to 2 hours prior the present time."
                },
                "latestStartTimeEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "description": "End of the search time window, in milliseconds since the Unix Epoch.  Events whose start time occurs before this value will be returned.   If no value is supplied, defaults to now."
                }
            },
            "description": "Refinement of time range over which to search (for events).  Operates on the *start* time of the event."
        },
        "CustomerFacingUserObject": {
            "type": "object",
            "required": [
                "customer",
                "id",
                "identifier",
                "self"
            ],
            "properties": {
                "userGroups": {
                    "type": "array",
                    "description": "List of user group identifiers this user belongs to",
                    "items": {
                        "type": "string"
                    }
                },
                "identifier": {
                    "type": "string",
                    "description": "The unique identifier of this user, which should be their valid email address"
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of this user, which should be their valid email address"
                },
                "self": {
                    "type": "boolean",
                    "description": "Whether this user is the one calling the API"
                },
                "groups": {
                    "type": "array",
                    "description": "List of permission groups this user has been granted access to",
                    "items": {
                        "type": "string"
                    }
                },
                "customer": {
                    "type": "string",
                    "description": "The id of the customer to which the user belongs"
                },
                "lastSuccessfulLogin": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The last time the user logged in, in epoch milliseconds"
                },
                "gravatarUrl": {
                    "type": "string",
                    "description": "URL id For User's gravatar (see gravatar.com), if one exists."
                },
                "escapedIdentifier": {
                    "type": "string",
                    "description": "URL Escaped Identifier"
                }
            }
        },
        "AccessControlListSimple": {
            "type": "object",
            "properties": {
                "canView": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "canModify": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ResponseContainerPagedCustomerFacingUserObject": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedCustomerFacingUserObject"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "AzureBaseCredentials": {
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "tenant"
            ],
            "properties": {
                "tenant": {
                    "type": "string",
                    "description": "Tenant Id for an Azure service account within your project."
                },
                "clientId": {
                    "type": "string",
                    "description": "Client Id for an Azure service account within your project."
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client Secret for an Azure service account within your project. Use 'saved_secret' to retain the client secret when updating."
                }
            }
        },
        "ResponseContainerListUserGroup": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserGroup"
                    }
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ExternalLink": {
            "type": "object",
            "required": [
                "description",
                "name",
                "template"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Human-readable description for this external link"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the external link.  Will be displayed in context (right-click) menus on charts"
                },
                "id": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "template": {
                    "type": "string",
                    "description": "The mustache template for this link.  This template must expand to a full URL, including scheme, origin, etc"
                },
                "metricFilterRegex": {
                    "type": "string",
                    "description": "Controls whether a link displayed in the context menu of a highlighted series.  If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed"
                },
                "sourceFilterRegex": {
                    "type": "string",
                    "description": "Controls whether a link displayed in the context menu of a highlighted series.  If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed"
                },
                "pointTagFilterRegexes": {
                    "type": "object",
                    "description": "Controls whether a link displayed in the context menu of a highlighted series.  This is a map from string to regular expression. The highlighted series must contain point tags whose keys are present in the keys of this map and whose values match the regular expressions associated with those keys in order for the link to be displayed",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "Links that can be generated from Wavefront to other analytical platforms"
        },
        "FacetsResponseContainer": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The requested limit"
                },
                "facets": {
                    "type": "object",
                    "description": "The requested facets, returned in a map whose key is the facet property and whose value is a list of facet values",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "ResponseStatus": {
            "type": "object",
            "required": [
                "code",
                "result"
            ],
            "properties": {
                "result": {
                    "type": "string",
                    "enum": [
                        "OK",
                        "ERROR"
                    ]
                },
                "message": {
                    "type": "string",
                    "description": "Descriptive message of the status of this response"
                },
                "code": {
                    "type": "integer",
                    "format": "int64",
                    "description": "HTTP Response code corresponding to this response"
                }
            }
        },
        "AzureActivityLogConfiguration": {
            "type": "object",
            "properties": {
                "baseCredentials": {
                    "$ref": "#/definitions/AzureBaseCredentials"
                },
                "categoryFilter": {
                    "type": "array",
                    "description": "A list of Azure ActivityLog categories to pull events for.Allowable values are ADMINISTRATIVE, SERVICEHEALTH, ALERT, AUTOSCALE, SECURITY",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ADMINISTRATIVE",
                            "SERVICEHEALTH",
                            "ALERT",
                            "AUTOSCALE",
                            "SECURITY"
                        ]
                    }
                }
            },
            "description": "Configurations specific to the Azure activity logs integration. Only applicable when the containing Credential has service=AZUREACTIVITYLOG"
        },
        "DashboardParameterValue": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "defaultValue": {
                    "type": "string"
                },
                "parameterType": {
                    "type": "string",
                    "enum": [
                        "SIMPLE",
                        "LIST",
                        "DYNAMIC"
                    ]
                },
                "valuesToReadableStrings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "dynamicFieldType": {
                    "type": "string",
                    "enum": [
                        "SOURCE",
                        "SOURCE_TAG",
                        "METRIC_NAME",
                        "TAG_KEY",
                        "MATCHING_SOURCE_TAG"
                    ]
                },
                "queryValue": {
                    "type": "string"
                },
                "hideFromView": {
                    "type": "boolean"
                },
                "tagKey": {
                    "type": "string"
                },
                "multivalue": {
                    "type": "boolean"
                },
                "allowAll": {
                    "type": "boolean"
                },
                "reverseDynSort": {
                    "type": "boolean",
                    "description": "Whether to reverse alphabetically sort the returned result."
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "credential": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resetToken": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "apiToken2": {
                    "type": "string"
                },
                "resetTokenCreationMillis": {
                    "type": "integer",
                    "format": "int64"
                },
                "invalidPasswordAttempts": {
                    "type": "integer",
                    "format": "int64"
                },
                "lastSuccessfulLogin": {
                    "type": "integer",
                    "format": "int64"
                },
                "settings": {
                    "$ref": "#/definitions/UserSettings"
                },
                "onboardingState": {
                    "type": "string"
                },
                "lastLogout": {
                    "type": "integer",
                    "format": "int64"
                },
                "ssoId": {
                    "type": "string"
                },
                "superAdmin": {
                    "type": "boolean"
                }
            }
        },
        "ResponseContainerCloudIntegration": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/CloudIntegration"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "Message": {
            "type": "object",
            "required": [
                "content",
                "display",
                "endEpochMillis",
                "scope",
                "severity",
                "source",
                "startEpochMillis",
                "title"
            ],
            "properties": {
                "source": {
                    "type": "string",
                    "description": "Message source.  System messages will com from 'system@wavefront.com'"
                },
                "attributes": {
                    "type": "object",
                    "description": "A string->string map of additional properties associated with this message",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "severity": {
                    "type": "string",
                    "description": "Message severity",
                    "enum": [
                        "MARKETING",
                        "INFO",
                        "WARN",
                        "SEVERE"
                    ]
                },
                "id": {
                    "type": "string"
                },
                "target": {
                    "type": "string",
                    "description": "For scope=CUSTOMER or scope=USER, the individual customer or user id"
                },
                "content": {
                    "type": "string",
                    "description": "Message content"
                },
                "scope": {
                    "type": "string",
                    "description": "The audience scope that this message should reach",
                    "enum": [
                        "CLUSTER",
                        "CUSTOMER",
                        "USER"
                    ]
                },
                "read": {
                    "type": "boolean",
                    "description": "A derived field for whether the current user has read this message"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this message"
                },
                "startEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "description": "When this message will begin to be displayed, in epoch millis"
                },
                "endEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "description": "When this message will stop being displayed, in epoch millis"
                },
                "display": {
                    "type": "string",
                    "description": "The form of display for this message",
                    "enum": [
                        "BANNER",
                        "TOASTER"
                    ]
                }
            },
            "description": "A message for display to a particular user, all users within a customer, or all users on a cluster"
        },
        "AvroBackedStandardizedDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "string"
                },
                "updaterId": {
                    "type": "string"
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64"
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleted": {
                    "type": "boolean"
                }
            }
        },
        "ResponseContainerEvent": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/Event"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "GCPBillingConfiguration": {
            "type": "object",
            "required": [
                "gcpApiKey",
                "gcpJsonKey",
                "projectId"
            ],
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The Google Cloud Platform (GCP) project id."
                },
                "gcpJsonKey": {
                    "type": "string",
                    "description": "Private key for a Google Cloud Platform (GCP) service account within your project.  The account must at least be granted Monitoring Viewer permissions.  This key must be in the JSON format generated by GCP. Use '{\"project_id\": \"%s\"}' to retain the existing key when updating."
                },
                "gcpApiKey": {
                    "type": "string",
                    "description": "API key for Google Cloud Platform (GCP). Use 'saved_api_key' to retain existing API key when updating"
                }
            },
            "description": "Configurations specific to the Google Cloud Platform Billing integration.  Only applicable when the containing Credential has service=GCPBilling"
        },
        "PagedMaintenanceWindow": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/MaintenanceWindow"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "ResponseContainerMessage": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/Message"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerSavedSearch": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/SavedSearch"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "SourceSearchRequestContainer": {
            "type": "object",
            "properties": {
                "cursor": {
                    "type": "string",
                    "description": "The id (exclusive) from which search results resume returning.  Users should supply an entity 'id' to this property.  Its main purpose is to resume where a previous search left off because of the 'limit' parameter.  If a user supplies the last id in a set of results to cursor, while keeping the query the same, the system will return the next page of results"
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "example": 100,
                    "description": "The number of results to return.  Default: 100"
                },
                "query": {
                    "type": "array",
                    "description": "A list of queries by which to limit the search results",
                    "items": {
                        "$ref": "#/definitions/SearchQuery"
                    }
                },
                "sortSourcesAscending": {
                    "type": "boolean",
                    "description": "Whether to sort source results ascending lexigraphically by id/sourceName.  Default: true"
                }
            }
        },
        "UserToCreate": {
            "type": "object",
            "required": [
                "emailAddress",
                "groups",
                "userGroups"
            ],
            "properties": {
                "emailAddress": {
                    "type": "string",
                    "description": "The (unique) identifier of the user to create. Must be a valid email address"
                },
                "groups": {
                    "type": "array",
                    "description": "List of permission groups to grant to this user. Please note that 'host_tag_management' is the equivalent of the 'Source Tag Management' permission.  Possible values are agent_management, alerts_management, dashboard_management, embedded_charts, events_management, external_links_management, host_tag_management, metrics_management, user_management",
                    "items": {
                        "type": "string"
                    }
                },
                "userGroups": {
                    "type": "array",
                    "description": "List of user groups to this user. ",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Source": {
            "type": "object",
            "required": [
                "id",
                "sourceName"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of this source"
                },
                "hidden": {
                    "type": "boolean",
                    "description": "A derived field denoting whether this source has been hidden (e.g. excluding it from query autocomplete among other things)",
                    "readOnly": true
                },
                "id": {
                    "type": "string",
                    "description": "id of this source, must be exactly equivalent to 'sourceName'"
                },
                "sourceName": {
                    "type": "string",
                    "description": "The name of the source, usually set by ingested telemetry"
                },
                "tags": {
                    "type": "object",
                    "description": "A Map (String -> boolean) Representing the source tags associated with this source.  To create a tag, set it as a KEY in this map, with associated value equal to true",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "markedNewEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Epoch Millis when this source was marked as ~status.new"
                }
            },
            "description": "A source (sometimes called host) of time series data from telemetry ingestion"
        },
        "StatsModel": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "integer",
                    "format": "int64"
                },
                "points": {
                    "type": "integer",
                    "format": "int64"
                },
                "summaries": {
                    "type": "integer",
                    "format": "int64"
                },
                "queries": {
                    "type": "integer",
                    "format": "int64"
                },
                "buffer_keys": {
                    "type": "integer",
                    "format": "int64"
                },
                "compacted_keys": {
                    "type": "integer",
                    "format": "int64"
                },
                "skipped_compacted_keys": {
                    "type": "integer",
                    "format": "int64"
                },
                "compacted_points": {
                    "type": "integer",
                    "format": "int64"
                },
                "cached_compacted_keys": {
                    "type": "integer",
                    "format": "int64"
                },
                "latency": {
                    "type": "integer",
                    "format": "int64"
                },
                "s3_keys": {
                    "type": "integer",
                    "format": "int64"
                },
                "cpu_ns": {
                    "type": "integer",
                    "format": "int64"
                },
                "metrics_used": {
                    "type": "integer",
                    "format": "int64"
                },
                "hosts_used": {
                    "type": "integer",
                    "format": "int64"
                },
                "query_tasks": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ResponseContainerPagedSavedSearch": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedSavedSearch"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "Proxy": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "version": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Proxy name (modifiable)"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "the proxy's status",
                    "readOnly": true,
                    "enum": [
                        "ACTIVE",
                        "STOPPED_UNKNOWN",
                        "STOPPED_BY_SERVER"
                    ]
                },
                "customerId": {
                    "type": "string",
                    "readOnly": true
                },
                "inTrash": {
                    "type": "boolean",
                    "readOnly": true
                },
                "hostname": {
                    "type": "string",
                    "description": "Host name of the machine running the proxy",
                    "readOnly": true
                },
                "lastCheckInTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Last time when this proxy checked in (in milliseconds since the unix epoch)",
                    "readOnly": true
                },
                "lastKnownError": {
                    "type": "string",
                    "description": "deprecated",
                    "readOnly": true
                },
                "lastErrorTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "deprecated",
                    "readOnly": true
                },
                "lastErrorEvent": {
                    "$ref": "#/definitions/Event"
                },
                "timeDrift": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time drift of the proxy's clock compared to Wavefront servers",
                    "readOnly": true
                },
                "bytesLeftForBuffer": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of bytes of space remaining in the persistent disk queue of this proxy",
                    "readOnly": true
                },
                "bytesPerMinuteForBuffer": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Bytes used per minute by the persistent disk queue of this proxy",
                    "readOnly": true
                },
                "localQueueSize": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of items in the persistent disk queue of this proxy",
                    "readOnly": true
                },
                "sshAgent": {
                    "type": "boolean",
                    "description": "deprecated",
                    "readOnly": true
                },
                "ephemeral": {
                    "type": "boolean",
                    "description": "When true, this proxy is expected to be ephemeral (possibly hosted on a short-lived container) and will be deleted after a period of inactivity (not checking in)",
                    "readOnly": true
                },
                "deleted": {
                    "type": "boolean"
                },
                "statusCause": {
                    "type": "string",
                    "description": "The reason why the proxy is in current status",
                    "readOnly": true
                }
            },
            "description": "Wavefront forwarding proxy"
        },
        "Number": {
            "type": "object"
        },
        "RawTimeseries": {
            "type": "object",
            "required": [
                "points"
            ],
            "properties": {
                "tags": {
                    "type": "object",
                    "description": "Associated tags of the time series",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Point"
                    }
                }
            }
        },
        "UserGroupWrite": {
            "type": "object",
            "required": [
                "name",
                "permissions"
            ],
            "properties": {
                "permissions": {
                    "type": "array",
                    "description": "List of permissions the user group has been granted access to",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user group"
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the user group"
                },
                "customer": {
                    "type": "string",
                    "description": "The id of the customer to which the user group belongs",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                }
            },
            "description": "Wavefront user group entity for write requests"
        },
        "CustomerPreferencesUpdating": {
            "type": "object",
            "required": [
                "grantModifyAccessToEveryone",
                "hideTSWhenQuerybuilderShown",
                "showOnboarding",
                "showQuerybuilderByDefault"
            ],
            "properties": {
                "showQuerybuilderByDefault": {
                    "type": "boolean",
                    "description": "Whether the Querybuilder is shown by default"
                },
                "hideTSWhenQuerybuilderShown": {
                    "type": "boolean",
                    "description": "Whether to hide TS source input when Querybuilder is shown"
                },
                "landingDashboardSlug": {
                    "type": "string",
                    "description": "Dashboard where user will be redirected from landing page"
                },
                "showOnboarding": {
                    "type": "boolean",
                    "description": "Whether to show onboarding for any new user without an override"
                },
                "grantModifyAccessToEveryone": {
                    "type": "boolean",
                    "description": "Whether modify access of new entites is granted to Everyone or to the Creator"
                },
                "defaultUserGroups": {
                    "type": "array",
                    "description": "List of default user groups of the customer",
                    "items": {
                        "type": "string"
                    }
                },
                "invitePermissions": {
                    "type": "array",
                    "description": "List of invite permissions to apply for each new user",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "Wavefront customer preferences updating model"
        },
        "FacetResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "type": "string"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "UserGroupPropertiesDTO": {
            "type": "object",
            "properties": {
                "nameEditable": {
                    "type": "boolean"
                },
                "permissionsEditable": {
                    "type": "boolean"
                },
                "usersEditable": {
                    "type": "boolean"
                }
            }
        },
        "IntegrationManifestGroup": {
            "type": "object",
            "required": [
                "integrations",
                "subtitle",
                "title"
            ],
            "properties": {
                "integrations": {
                    "type": "array",
                    "description": "A list of paths to JSON definitions for integrations in this group",
                    "items": {
                        "type": "string"
                    }
                },
                "integrationObjs": {
                    "type": "array",
                    "description": "Materialized JSONs for integrations belonging to this group, as referenced by `integrations`",
                    "items": {
                        "$ref": "#/definitions/Integration"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "Title of this integration group"
                },
                "subtitle": {
                    "type": "string",
                    "description": "Subtitle of this integration group"
                }
            },
            "description": "A functional group of integrations defined together in a manifest"
        },
        "CloudTrailConfiguration": {
            "type": "object",
            "required": [
                "bucketName",
                "region"
            ],
            "properties": {
                "region": {
                    "type": "string",
                    "description": "The AWS region of the S3 bucket where CloudTrail logs are stored"
                },
                "prefix": {
                    "type": "string",
                    "description": "The common prefix, if any, appended to all CloudTrail log files"
                },
                "bucketName": {
                    "type": "string",
                    "description": "Name of the S3 bucket where CloudTrail logs are stored"
                },
                "baseCredentials": {
                    "$ref": "#/definitions/AWSBaseCredentials"
                },
                "filterRule": {
                    "type": "string",
                    "description": "Rule to filter cloud trail log event."
                }
            },
            "description": "Configurations specific to the CloudTrail AWS integration.  Only applicable when the containing Credential has service=CLOUDTRAIL"
        },
        "Integration": {
            "type": "object",
            "required": [
                "description",
                "icon",
                "name",
                "version"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Integration description"
                },
                "version": {
                    "type": "string",
                    "description": "Integration version string"
                },
                "metrics": {
                    "$ref": "#/definitions/IntegrationMetrics"
                },
                "icon": {
                    "type": "string",
                    "description": "URI path to the integration icon"
                },
                "name": {
                    "type": "string",
                    "description": "Integration name"
                },
                "id": {
                    "type": "string"
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL for this integration's assets"
                },
                "status": {
                    "$ref": "#/definitions/IntegrationStatus"
                },
                "aliasOf": {
                    "type": "string",
                    "description": "If set, designates this integration as an alias integration, of the integration whose id is specified."
                },
                "aliasIntegrations": {
                    "type": "array",
                    "description": "If set, a list of objects describing integrations that alias this one.",
                    "items": {
                        "$ref": "#/definitions/IntegrationAlias"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "A list of dashboards belonging to this integration",
                    "items": {
                        "$ref": "#/definitions/IntegrationDashboard"
                    }
                },
                "alerts": {
                    "type": "array",
                    "description": "A list of alerts belonging to this integration",
                    "items": {
                        "$ref": "#/definitions/IntegrationAlert"
                    }
                },
                "creatorId": {
                    "type": "string"
                },
                "updaterId": {
                    "type": "string"
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64"
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64"
                },
                "deleted": {
                    "type": "boolean"
                },
                "overview": {
                    "type": "string",
                    "description": "Descriptive text giving an overview of integration functionality"
                },
                "setup": {
                    "type": "string",
                    "description": "How the integration will be set-up"
                }
            },
            "description": "Wavefront integrations are a set of incoming metrics along with a bundle of functionality (initially dashboards but alerts, webhooks, and the like in the near future"
        },
        "EC2Configuration": {
            "type": "object",
            "properties": {
                "baseCredentials": {
                    "$ref": "#/definitions/AWSBaseCredentials"
                },
                "hostNameTags": {
                    "type": "array",
                    "description": "A list of AWS instance tags that, when found, will be used as the \"source\" name in a series.  Default: [\"hostname\", \"host\", \"name\"].  If no tag in this list is found, the series source is set to the instance id.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "Configurations specific to the EC2 AWS integration.  Only applicable when the containing Credential has service=EC2"
        },
        "MetricStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "OK",
                        "PENDING"
                    ]
                },
                "ever": {
                    "type": "boolean"
                },
                "recentExceptNow": {
                    "type": "boolean"
                },
                "now": {
                    "type": "boolean"
                }
            }
        },
        "ResponseContainerHistoryResponse": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/HistoryResponse"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "SortableSearchRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of results to return.  Default: 100"
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of results to skip before returning values.  Default: 0"
                },
                "query": {
                    "type": "array",
                    "description": "A list of queries by which to limit the search results.  Entities that match ALL queries in the list are returned",
                    "items": {
                        "$ref": "#/definitions/SearchQuery"
                    }
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "PagedExternalLink": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/ExternalLink"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "TeslaConfiguration": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email address for Tesla account login"
                }
            },
            "description": "Configurations specific to the Tesla integration.  Only applicable when the containing Credential has service=TESLA"
        },
        "IntegrationAlert": {
            "type": "object",
            "required": [
                "description",
                "name",
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Alert description"
                },
                "name": {
                    "type": "string",
                    "description": "Alert name"
                },
                "alertObj": {
                    "$ref": "#/definitions/Alert"
                },
                "url": {
                    "type": "string",
                    "description": "URL path to the JSON definition of this alert"
                }
            },
            "description": "A alert definition belonging to a particular integration"
        },
        "IntegrationMetrics": {
            "type": "object",
            "required": [
                "charts",
                "display",
                "prefixes",
                "required"
            ],
            "properties": {
                "prefixes": {
                    "type": "array",
                    "description": "Set of metric prefix namespaces belonging to this integration",
                    "items": {
                        "type": "string"
                    }
                },
                "chartObjs": {
                    "type": "array",
                    "description": "Chart JSONs materialized from the links in `charts`",
                    "items": {
                        "$ref": "#/definitions/Chart"
                    }
                },
                "display": {
                    "type": "array",
                    "description": "Set of metrics that are displayed in the metric panel during integration setup",
                    "items": {
                        "type": "string"
                    }
                },
                "charts": {
                    "type": "array",
                    "description": "URLs for JSON definitions of charts that display info about this integration's metrics",
                    "items": {
                        "type": "string"
                    }
                },
                "required": {
                    "type": "array",
                    "description": "Set of \"canary\" metrics that define the \"liveness\" of this integration's metric ingestion",
                    "items": {
                        "type": "string"
                    }
                },
                "ppsDimensions": {
                    "type": "array",
                    "description": "For reported points belonging to this integration, these point tags are escalated to the internal point-rate counters so that reporting can be broken out by these dimensions",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "Definition of the metrics belonging this integration"
        },
        "ResponseContainerDerivedMetricDefinition": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/DerivedMetricDefinition"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "Point": {
            "type": "object",
            "required": [
                "timestamp",
                "value"
            ],
            "properties": {
                "value": {
                    "type": "number",
                    "format": "double"
                },
                "timestamp": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The timestamp of the point in milliseconds"
                }
            }
        },
        "PagedUserGroup": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/UserGroup"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "NewRelicMetricFilters": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "metricFilterRegex": {
                    "type": "string"
                }
            }
        },
        "Sorting": {
            "type": "object",
            "required": [
                "ascending",
                "field"
            ],
            "properties": {
                "ascending": {
                    "type": "boolean",
                    "description": "Whether to sort ascending.  If undefined, sorting is not guaranteed"
                },
                "field": {
                    "type": "string",
                    "description": "The facet by which to sort"
                },
                "default": {
                    "type": "boolean",
                    "description": "Whether this sort requests the default ranking order.  Ascending/descending does not matter if this attribute is true.",
                    "readOnly": true
                }
            },
            "description": "Specifies how returned items should be sorted"
        },
        "ResponseContainerPagedDerivedMetricDefinition": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedDerivedMetricDefinition"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerMapStringInteger": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "AWSBaseCredentials": {
            "type": "object",
            "required": [
                "externalId",
                "roleArn"
            ],
            "properties": {
                "roleArn": {
                    "type": "string",
                    "example": "arn:aws:iam::<accountid>:role/<rolename>",
                    "description": "The Role ARN that the customer has created in AWS IAM to allow access to Wavefront"
                },
                "externalId": {
                    "type": "string",
                    "example": "wave228",
                    "description": "The external id corresponding to the Role ARN"
                }
            }
        },
        "PagedEvent": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "ResponseContainerPagedDerivedMetricDefinitionWithStats": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedDerivedMetricDefinitionWithStats"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerNotificant": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/Notificant"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "IteratorJsonNode": {
            "type": "object"
        },
        "CloudIntegration": {
            "type": "object",
            "required": [
                "name",
                "service"
            ],
            "properties": {
                "forceSave": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name of this integration"
                },
                "id": {
                    "type": "string"
                },
                "service": {
                    "type": "string",
                    "description": "A value denoting which cloud service this integration integrates with",
                    "enum": [
                        "CLOUDWATCH",
                        "CLOUDTRAIL",
                        "EC2",
                        "GCP",
                        "GCPBILLING",
                        "TESLA",
                        "AZURE",
                        "AZUREACTIVITYLOG"
                    ]
                },
                "inTrash": {
                    "type": "boolean",
                    "readOnly": true
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "additionalTags": {
                    "type": "object",
                    "description": "A list of point tag key-values to add to every point ingested using this integration",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "lastReceivedDataPointMs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time that this integration last received a data point, in epoch millis",
                    "readOnly": true
                },
                "lastMetricCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of metrics / events ingested by this integration the last time it ran",
                    "readOnly": true
                },
                "cloudWatch": {
                    "$ref": "#/definitions/CloudWatchConfiguration"
                },
                "cloudTrail": {
                    "$ref": "#/definitions/CloudTrailConfiguration"
                },
                "ec2": {
                    "$ref": "#/definitions/EC2Configuration"
                },
                "gcp": {
                    "$ref": "#/definitions/GCPConfiguration"
                },
                "gcpBilling": {
                    "$ref": "#/definitions/GCPBillingConfiguration"
                },
                "newRelic": {
                    "$ref": "#/definitions/NewRelicConfiguration"
                },
                "tesla": {
                    "$ref": "#/definitions/TeslaConfiguration"
                },
                "azure": {
                    "$ref": "#/definitions/AzureConfiguration"
                },
                "azureActivityLog": {
                    "$ref": "#/definitions/AzureActivityLogConfiguration"
                },
                "lastError": {
                    "type": "string",
                    "description": "Digest of the last error encountered by Wavefront servers when fetching data using this integration",
                    "readOnly": true
                },
                "lastErrorMs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time, in epoch millis, of the last error encountered by Wavefront servers when fetching data using this integration",
                    "readOnly": true
                },
                "disabled": {
                    "type": "boolean",
                    "description": "True when an aws credential failed to authenticate.",
                    "readOnly": true
                },
                "lastProcessorId": {
                    "type": "string",
                    "description": "Opaque id of the last Wavefront integrations service to act on this integration",
                    "readOnly": true
                },
                "lastProcessingTimestamp": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Time, in epoch millis, that this integration was last processed",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "serviceRefreshRateInMins": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Service refresh rate in minutes."
                },
                "lastErrorEvent": {
                    "$ref": "#/definitions/Event"
                },
                "deleted": {
                    "type": "boolean",
                    "readOnly": true
                }
            },
            "description": "Wavefront Cloud Integration"
        },
        "ResponseContainerListString": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "Alert": {
            "type": "object",
            "required": [
                "condition",
                "minutes",
                "name",
                "severity",
                "target"
            ],
            "properties": {
                "lastEventTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Start time (in epoch millis) of the last event associated with this alert.",
                    "readOnly": true
                },
                "created": {
                    "type": "integer",
                    "format": "int64",
                    "description": "When this alert was created, in epoch millis",
                    "readOnly": true
                },
                "severity": {
                    "type": "string",
                    "description": "Severity of the alert",
                    "enum": [
                        "INFO",
                        "SMOKE",
                        "WARN",
                        "SEVERE"
                    ]
                },
                "hidden": {
                    "type": "boolean",
                    "readOnly": true
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "target": {
                    "type": "string",
                    "description": "The email address or integration endpoint (such as PagerDuty or webhook) to notify when the alert status changes"
                },
                "minutes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of consecutive minutes that a series matching the condition query must evaluate to \"true\" (non-zero value) before the alert fires"
                },
                "tags": {
                    "$ref": "#/definitions/WFTags"
                },
                "status": {
                    "type": "array",
                    "description": "Lists the current state of the alert. Can be one or more of: FIRING,SNOOZED, IN_MAINTENANCE, INVALID, NONE, CHECKING, TRASH, NO_DATA",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "event": {
                    "$ref": "#/definitions/Event"
                },
                "updated": {
                    "type": "integer",
                    "format": "int64",
                    "description": "When the alert was last updated, in epoch millis",
                    "readOnly": true
                },
                "processRateMinutes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The interval between checks for this alert, in minutes.  Defaults to 1 minute"
                },
                "lastProcessedMillis": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time when this alert was last checked, in epoch millis",
                    "readOnly": true
                },
                "updateUserId": {
                    "type": "string",
                    "description": "The user that last updated this alert",
                    "readOnly": true
                },
                "inMaintenanceHostLabelPairs": {
                    "type": "array",
                    "description": "Lists the sources that will not be checked for this alert, due to matching a maintenance window",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SourceLabelPair"
                    }
                },
                "failingHostLabelPairs": {
                    "type": "array",
                    "description": "Failing host/metric pairs",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SourceLabelPair"
                    }
                },
                "activeMaintenanceWindows": {
                    "type": "array",
                    "description": "The names of the active maintenance windows that are affecting this alert",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "prefiringHostLabelPairs": {
                    "type": "array",
                    "description": "Lists the series that are starting to fail, defined as failing for greater than 50% of the checks in the window determined by the \"minutes\" parameter",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SourceLabelPair"
                    }
                },
                "noDataEvent": {
                    "description": "No data event related to the alert",
                    "readOnly": true,
                    "$ref": "#/definitions/Event"
                },
                "snoozed": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The until which time this alert is snoozed (not checked), in epoch millis.  A negative value implies the alert is snoozed indefinitely"
                },
                "notificants": {
                    "type": "array",
                    "description": "A derived field listing the webhook ids used by this alert",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "additionalInformation": {
                    "type": "string",
                    "description": "User-supplied additional explanatory information for this alert.  Useful for linking runbooks, mitigations,, etc"
                },
                "lastQueryTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Last query time of the alert, averaged on hourly basis",
                    "readOnly": true
                },
                "alertsLastDay": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "alertsLastWeek": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "alertsLastMonth": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "inTrash": {
                    "type": "boolean"
                },
                "queryFailing": {
                    "type": "boolean",
                    "description": "Whether there was an exception when the alert condition last ran",
                    "readOnly": true
                },
                "createUserId": {
                    "type": "string",
                    "readOnly": true
                },
                "lastFailedTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time of the last error encountered when running this alert's condition query, in epoch millis",
                    "readOnly": true
                },
                "lastNotificationMillis": {
                    "type": "integer",
                    "format": "int64",
                    "description": "When this alert last caused a notification, in epoch millis",
                    "readOnly": true
                },
                "pointsScannedAtLastQuery": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A derived field recording the number of data points scanned when the system last computed this alert's condition",
                    "readOnly": true
                },
                "displayExpression": {
                    "type": "string",
                    "description": "A second query whose results are displayed in the alert user interface instead of the condition query. This field is often used to display a version of the condition query with Boolean operators removed so that numerical values are plotted"
                },
                "conditionQBEnabled": {
                    "type": "boolean",
                    "description": "Whether the condition query was created using the Query Builder.  Default false"
                },
                "displayExpressionQBEnabled": {
                    "type": "boolean",
                    "description": "Whether the display expression query was created using the Query Builder. Default false"
                },
                "condition": {
                    "type": "string",
                    "description": "A Wavefront query that is evaluated at regular intervals (default 1m).  The alert fires and notifications are triggered when a data series matching this query evaluates to a non-zero value for a set number of consecutive minutes"
                },
                "conditionQBSerialization": {
                    "type": "string",
                    "description": "The special serialization of the Query Builder that corresponds to the condition query.  Applicable only when conditionQBEnabled is true"
                },
                "displayExpressionQBSerialization": {
                    "type": "string",
                    "description": "The special serialization of the Query Builder that corresponds to the display expression query.  Applicable only when displayExpressionQBEnabled is true"
                },
                "includeObsoleteMetrics": {
                    "type": "boolean",
                    "description": "Whether to include obsolete metrics in alert query"
                },
                "numPointsInFailureFrame": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of points scanned in alert query time frame.",
                    "readOnly": true
                },
                "metricsUsed": {
                    "type": "array",
                    "description": "Number of metrics checked by the alert condition",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "hostsUsed": {
                    "type": "array",
                    "description": "Number of hosts checked by the alert condition",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "systemOwned": {
                    "type": "boolean",
                    "description": "Whether this alert is system-owned and not writeable",
                    "readOnly": true
                },
                "resolveAfterMinutes": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of consecutive minutes that a firing series matching the condition query must evaluate to \"false\" (zero value) before the alert resolves.  When unset, this defaults to the same value as \"minutes\""
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "lastErrorMessage": {
                    "type": "string",
                    "description": "The last error encountered when running this alert's condition query",
                    "readOnly": true
                },
                "notificationResendFrequencyMinutes": {
                    "type": "integer",
                    "format": "int64",
                    "description": "How often to re-trigger a continually failing alert. If absent or <= 0, no retriggering occurs"
                },
                "deleted": {
                    "type": "boolean",
                    "readOnly": true
                },
                "targetInfo": {
                    "type": "array",
                    "description": "List of alert targets display information that includes name, id and type.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TargetInfo"
                    }
                },
                "sortAttr": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Attribute used for default alert sort that is derived from state and severity",
                    "readOnly": true
                }
            },
            "description": "Wavefront Alert"
        },
        "Notificant": {
            "type": "object",
            "required": [
                "description",
                "method",
                "recipient",
                "template",
                "title",
                "triggers"
            ],
            "properties": {
                "contentType": {
                    "type": "string",
                    "description": "The value of the Content-Type header of the webhook POST request.",
                    "enum": [
                        "application/json",
                        "text/html",
                        "text/plain",
                        "application/x-www-form-urlencoded",
                        ""
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Description"
                },
                "method": {
                    "type": "string",
                    "description": "The notification method used for notification target.",
                    "enum": [
                        "WEBHOOK",
                        "EMAIL",
                        "PAGERDUTY"
                    ]
                },
                "id": {
                    "type": "string"
                },
                "customerId": {
                    "type": "string",
                    "readOnly": true
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "creatorId": {
                    "type": "string",
                    "readOnly": true
                },
                "updaterId": {
                    "type": "string",
                    "readOnly": true
                },
                "createdEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "updatedEpochMillis": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                },
                "template": {
                    "type": "string",
                    "description": "A mustache template that will form the body of the POST request, email and summary of the PagerDuty."
                },
                "triggers": {
                    "type": "array",
                    "description": "A list of occurrences on which this webhook will be fired.  Valid values are ALERT_OPENED, ALERT_UPDATED, ALERT_RESOLVED, ALERT_MAINTENANCE, ALERT_SNOOZED",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ALERT_OPENED",
                            "ALERT_UPDATED",
                            "ALERT_RESOLVED",
                            "ALERT_MAINTENANCE",
                            "ALERT_SNOOZED",
                            "ALERT_INVALID",
                            "ALERT_NO_LONGER_INVALID",
                            "ALERT_TESTING",
                            "ALERT_RETRIGGERED",
                            "ALERT_NO_DATA",
                            "ALERT_NO_DATA_RESOLVED",
                            "ALERT_NO_DATA_MAINTENANCE"
                        ]
                    }
                },
                "recipient": {
                    "type": "string",
                    "description": "The end point for the notification target.EMAIL: email address.  PAGERDUTY: PagerDuty routing Key.  WEBHOOK: URL end point"
                },
                "customHttpHeaders": {
                    "type": "object",
                    "description": "A string->string map specifying the custom HTTP header key / value pairs that will be sent in the requests of this web hook",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "emailSubject": {
                    "type": "string",
                    "description": "The subject title of an email notification target"
                },
                "isHtmlContent": {
                    "type": "boolean",
                    "description": "Determine whether the email alert target content is sent as html or text."
                }
            },
            "description": "Wavefront notificant entity"
        },
        "IteratorString": {
            "type": "object"
        },
        "ResponseContainerPagedEvent": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/PagedEvent"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "ResponseContainerDashboard": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "$ref": "#/definitions/ResponseStatus"
                },
                "response": {
                    "$ref": "#/definitions/Dashboard"
                }
            },
            "description": "JSON container for the HTTP response along with status"
        },
        "PagedDerivedMetricDefinition": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of requested items",
                    "items": {
                        "$ref": "#/definitions/DerivedMetricDefinition"
                    }
                },
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "format": "int32"
                },
                "cursor": {
                    "type": "string",
                    "description": "The id at which the current (limited) search can be continued to obtain more matching items"
                },
                "totalItems": {
                    "type": "integer",
                    "format": "int32",
                    "description": "An estimate (lower-bound) of the total number of items available for return.  May not be a tight estimate for facet queries"
                },
                "moreItems": {
                    "type": "boolean",
                    "description": "Whether more items are available for return by increment offset or cursor"
                },
                "sort": {
                    "$ref": "#/definitions/Sorting"
                }
            }
        },
        "WFTags": {
            "type": "object",
            "properties": {
                "customerTags": {
                    "type": "array",
                    "description": "Customer-wide tags.  Can be on various wavefront entities such alerts or dashboards.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
